{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SYH\\\\Desktop\\\\data\\\\Project\\\\Frontend\\\\src\\\\components\\\\Maps\\\\Map.js\",\n    _s = $RefreshSig$();\n\n/*global kakao*/\nimport { getSpaceUntilMaxLength } from '@testing-library/user-event/dist/utils';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Map = () => {\n  _s();\n\n  const [LatLng, setLatLng] = useState([36.142410487698, 128.39430145218606]);\n  var mapContainer = document.getElementById('map'),\n      // 지도를 표시할 div  \n  mapOption = {\n    center: new kakao.maps.LatLng(LatLng[0], LatLng[1]),\n    // 지도의 중심좌표\n    level: 4 // 지도의 확대 레벨\n\n  };\n  var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\n  // function selectMarker()\n  // {\n  //     setLatLng(map.getCenter().getLat(),map.getCenter().getLng());\n  //     console.log(LatLng);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      height: \"100%\"\n    },\n    onChange: selectMarker\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Map, \"8ZSAj7KEEqSUJBvmQdUhYMrp47Q=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["C:/Users/SYH/Desktop/data/Project/Frontend/src/components/Maps/Map.js"],"names":["getSpaceUntilMaxLength","React","useEffect","useState","Map","LatLng","setLatLng","mapContainer","document","getElementById","mapOption","center","kakao","maps","level","map","height","selectMarker"],"mappings":";;;AAAA;AACA,SAASA,sBAAT,QAAuC,wCAAvC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,GAAG,GAAC,MAAI;AAAA;;AACV,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,CAAC,eAAD,EAAkB,kBAAlB,CAAD,CAApC;AAEA,MAAII,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAnB;AAAA,MAAmD;AACnDC,EAAAA,SAAS,GACT;AACIC,IAAAA,MAAM,EAAE,IAAIC,KAAK,CAACC,IAAN,CAAWR,MAAf,CAAsBA,MAAM,CAAC,CAAD,CAA5B,EAAiCA,MAAM,CAAC,CAAD,CAAvC,CADZ;AACyD;AACrDS,IAAAA,KAAK,EAAE,CAFX,CAEa;;AAFb,GAFA;AAOA,MAAIC,GAAG,GAAG,IAAIH,KAAK,CAACC,IAAN,CAAWT,GAAf,CAAmBG,YAAnB,EAAiCG,SAAjC,CAAV,CAVU,CAU6C;AAEvD;AACA;AACA;AACA;AACA;;AAEA,sBACI;AAAK,IAAA,EAAE,EAAC,KAAR;AAAc,IAAA,KAAK,EAAE;AAACM,MAAAA,MAAM,EAAE;AAAT,KAArB;AAAuC,IAAA,QAAQ,EAAEC;AAAjD;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CArBD;;GAAMb,G;;KAAAA,G;AAuBN,eAAeA,GAAf","sourcesContent":["/*global kakao*/ \r\nimport { getSpaceUntilMaxLength } from '@testing-library/user-event/dist/utils';\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nconst Map=()=>{\r\n    const [LatLng, setLatLng] = useState([36.142410487698, 128.39430145218606]);\r\n\r\n    var mapContainer = document.getElementById('map'), // 지도를 표시할 div  \r\n    mapOption = \r\n    { \r\n        center: new kakao.maps.LatLng(LatLng[0], LatLng[1]), // 지도의 중심좌표\r\n        level: 4 // 지도의 확대 레벨\r\n    };\r\n\r\n    var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\r\n    \r\n    // function selectMarker()\r\n    // {\r\n    //     setLatLng(map.getCenter().getLat(),map.getCenter().getLng());\r\n    //     console.log(LatLng);\r\n    // }\r\n\r\n    return (\r\n        <div id=\"map\" style={{height: \"100%\"}} onChange={selectMarker}></div> \r\n    )\r\n}\r\n\r\nexport default Map;"]},"metadata":{},"sourceType":"module"}