{"ast":null,"code":"var _jsxFileName = \"/Users/guhyeonwoo/Git/Projects/Taxi-Project/taxifront/src/SaveMarkers.js\",\n    _s = $RefreshSig$();\n\n/*global kakao*/\nimport React, { useState, useEffect } from 'react';\nimport { propTypes } from 'react-bootstrap/esm/Image';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SaveMarkers() {\n  _s();\n\n  useEffect(() => {\n    var mapContainer = document.getElementById('map'),\n        // 지도를 표시할 div \n    mapOption = {\n      center: new kakao.maps.LatLng(36.14243941272335, 128.39433251647304),\n      // 지도의 중심좌표\n      level: 3 // 지도의 확대 레벨\n\n    }; // 지도에 표시된 마커 객체를 가지고 있을 배열입니다\n\n    var markers = []; // 마커 하나를 지도위에 표시합니다 \n\n    addMarker(new kakao.maps.LatLng(36.14243941272335, 128.39433251647304)); // 마커를 생성하고 지도위에 표시하는 함수입니다\n\n    function addMarker(position) {\n      //전의 마크를 삭제합니다\n      setMarkers(null); // 마커를 생성합니다\n\n      var marker = new kakao.maps.Marker({\n        position: position\n      }); // 마커가 지도 위에 표시되도록 설정합니다\n\n      marker.setMap(map); // 생성된 마커를 배열에 추가합니다\n\n      markers.push(marker);\n    } // 배열에 추가된 마커들을 지도에 표시하거나 삭제하는 함수입니다\n\n\n    function setMarkers(map) {\n      for (var i = 0; i < markers.length; i++) {\n        markers[i].setMap(map);\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SaveMarkers, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = SaveMarkers;\nexport default SaveMarkers;\n\nvar _c;\n\n$RefreshReg$(_c, \"SaveMarkers\");","map":{"version":3,"sources":["/Users/guhyeonwoo/Git/Projects/Taxi-Project/taxifront/src/SaveMarkers.js"],"names":["React","useState","useEffect","propTypes","SaveMarkers","mapContainer","document","getElementById","mapOption","center","kakao","maps","LatLng","level","markers","addMarker","position","setMarkers","marker","Marker","setMap","map","push","i","length"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,SAAT,QAA0B,2BAA1B;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AAEnBF,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIG,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAnB;AAAA,QAAmD;AAC/CC,IAAAA,SAAS,GAAG;AACRC,MAAAA,MAAM,EAAE,IAAIC,KAAK,CAACC,IAAN,CAAWC,MAAf,CAAsB,iBAAtB,EAAyC,kBAAzC,CADA;AAC8D;AACtEC,MAAAA,KAAK,EAAE,CAFC,CAEC;;AAFD,KADhB,CADU,CASV;;AACA,QAAIC,OAAO,GAAG,EAAd,CAVU,CAYV;;AACAC,IAAAA,SAAS,CAAC,IAAIL,KAAK,CAACC,IAAN,CAAWC,MAAf,CAAsB,iBAAtB,EAAyC,kBAAzC,CAAD,CAAT,CAbU,CAeV;;AACA,aAASG,SAAT,CAAmBC,QAAnB,EAA6B;AAEzB;AACAC,MAAAA,UAAU,CAAC,IAAD,CAAV,CAHyB,CAKzB;;AACA,UAAIC,MAAM,GAAG,IAAIR,KAAK,CAACC,IAAN,CAAWQ,MAAf,CAAsB;AAC/BH,QAAAA,QAAQ,EAAEA;AADqB,OAAtB,CAAb,CANyB,CAUzB;;AACAE,MAAAA,MAAM,CAACE,MAAP,CAAcC,GAAd,EAXyB,CAazB;;AACAP,MAAAA,OAAO,CAACQ,IAAR,CAAaJ,MAAb;AACH,KA/BS,CAiCV;;;AACA,aAASD,UAAT,CAAoBI,GAApB,EAAyB;AACrB,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,OAAO,CAACU,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrCT,QAAAA,OAAO,CAACS,CAAD,CAAP,CAAWH,MAAX,CAAkBC,GAAlB;AACH;AACJ;AAGJ,GAzCQ,EAyCN,EAzCM,CAAT;AA4CA,sBACI;AAAK,IAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GAjDQjB,W;;KAAAA,W;AAmDT,eAAeA,WAAf","sourcesContent":["/*global kakao*/ \nimport React, {useState, useEffect } from 'react'\nimport { propTypes } from 'react-bootstrap/esm/Image';\n\nfunction SaveMarkers() {\n\n    useEffect(()=>{\n        var mapContainer = document.getElementById('map'), // 지도를 표시할 div \n            mapOption = { \n                center: new kakao.maps.LatLng(36.14243941272335, 128.39433251647304), // 지도의 중심좌표\n                level: 3 // 지도의 확대 레벨\n            };\n\n\n\n        // 지도에 표시된 마커 객체를 가지고 있을 배열입니다\n        var markers = [];\n\n        // 마커 하나를 지도위에 표시합니다 \n        addMarker(new kakao.maps.LatLng(36.14243941272335, 128.39433251647304));\n\n        // 마커를 생성하고 지도위에 표시하는 함수입니다\n        function addMarker(position) {\n            \n            //전의 마크를 삭제합니다\n            setMarkers(null); \n\n            // 마커를 생성합니다\n            var marker = new kakao.maps.Marker({\n                position: position\n            });\n\n            // 마커가 지도 위에 표시되도록 설정합니다\n            marker.setMap(map);\n            \n            // 생성된 마커를 배열에 추가합니다\n            markers.push(marker);\n        }\n\n        // 배열에 추가된 마커들을 지도에 표시하거나 삭제하는 함수입니다\n        function setMarkers(map) {\n            for (var i = 0; i < markers.length; i++) {\n                markers[i].setMap(map);\n            }            \n        }\n\n\n    }, [])\n\n\n    return (\n        <div id=\"map\"></div>\n    )\n}\n\nexport default SaveMarkers;"]},"metadata":{},"sourceType":"module"}