{"ast":null,"code":"var _jsxFileName = \"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/components/Maps/Map.js\",\n    _s = $RefreshSig$();\n\n/*global kakao*/\nimport React, { useContext, useEffect, useState } from 'react';\nimport { LatLngContext } from '../../contexts/LatLngContexts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Map = () => {\n  _s();\n\n  var Lat, Lng;\n  const {\n    isLatLng,\n    setIsLatLng\n  } = useContext(LatLngContext);\n  useEffect(() => {\n    var mapContainer = document.getElementById('map'); // 지도를 표시할 div  \n\n    var mapOption = {\n      center: new kakao.maps.LatLng(isLatLng[0], isLatLng[1]),\n      // 지도의 중심좌표\n      level: 4 // 지도의 확대 레벨\n\n    };\n    var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\n    // 지도를 클릭했을때 클릭한 위치에 마커를 추가하도록 지도에 클릭이벤트를 등록합니다\n\n    kakao.maps.event.addListener(map, 'click', function (mouseEvent) {\n      // Lat = mouseEvent.latLng.getLat();\n      // Lng = mouseEvent.latLng.getLng();\n      // console.log(Lat, Lng);\n      setIsLatLng([mouseEvent.latLng.getLat(), mouseEvent.latLng.getLng()]); // 클릭한 위치에 마커를 표시합니다 \n      // addMarker(mouseEvent.latLng);     \n    }); // // 지도에 표시된 마커 객체를 가지고 있을 배열입니다\n    // var markers = [];\n    // // 마커 하나를 지도위에 표시합니다 \n    // addMarker(new kakao.maps.LatLng(isLatLng[0], isLatLng[1]));\n    // // 마커를 생성하고 지도위에 표시하는 함수입니다\n    // function addMarker(position) {\n    //     hideMarkers();\n    //     // 마커를 생성합니다\n    //     var marker = new kakao.maps.Marker({\n    //         position: position\n    //     });\n    //     // 마커가 지도 위에 표시되도록 설정합니다\n    //     marker.setMap(map);\n    //     // 생성된 마커를 배열에 추가합니다\n    //     markers.push(marker);\n    // }\n    // // 배열에 추가된 마커들을 지도에 표시하거나 삭제하는 함수입니다\n    // function setMarkers(map) {\n    //     for (var i = 0; i < markers.length; i++) {\n    //         markers[i].setMap(map);\n    //     }            \n    // }\n    // // \"마커 감추기\" 버튼을 클릭하면 호출되어 배열에 추가된 마커를 지도에서 삭제하는 함수입니다\n    // function hideMarkers() {\n    //     setMarkers(null);    \n    // }\n\n    function setCenter() {\n      // 이동할 위도 경도 위치를 생성합니다 \n      var moveLatLon = new kakao.maps.LatLng(isLatLng[0], isLatLng[1]); // 지도 중심을 이동 시킵니다\n\n      map.setCenter(moveLatLon);\n    }\n  }, [isLatLng]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      height: \"100%\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Map, \"cYrv9OQWQP3RYcfL6uux5H8awz0=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/components/Maps/Map.js"],"names":["React","useContext","useEffect","useState","LatLngContext","Map","Lat","Lng","isLatLng","setIsLatLng","mapContainer","document","getElementById","mapOption","center","kakao","maps","LatLng","level","map","event","addListener","mouseEvent","latLng","getLat","getLng","setCenter","moveLatLon","height"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,aAAT,QAA8B,+BAA9B;;;AAEA,MAAMC,GAAG,GAAG,MAAK;AAAA;;AACb,MAAIC,GAAJ,EAASC,GAAT;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BR,UAAU,CAACG,aAAD,CAA5C;AAEAF,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIQ,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAnB,CADU,CACyC;;AACnD,QAAIC,SAAS,GAAG;AACZC,MAAAA,MAAM,EAAE,IAAIC,KAAK,CAACC,IAAN,CAAWC,MAAf,CAAsBT,QAAQ,CAAC,CAAD,CAA9B,EAAmCA,QAAQ,CAAC,CAAD,CAA3C,CADI;AAC6C;AACzDU,MAAAA,KAAK,EAAE,CAFK,CAEH;;AAFG,KAAhB;AAKA,QAAIC,GAAG,GAAG,IAAIJ,KAAK,CAACC,IAAN,CAAWX,GAAf,CAAmBK,YAAnB,EAAiCG,SAAjC,CAAV,CAPU,CAO6C;AAEvD;;AACAE,IAAAA,KAAK,CAACC,IAAN,CAAWI,KAAX,CAAiBC,WAAjB,CAA6BF,GAA7B,EAAkC,OAAlC,EAA2C,UAASG,UAAT,EAAqB;AAC5D;AACA;AACA;AACAb,MAAAA,WAAW,CAAC,CAACa,UAAU,CAACC,MAAX,CAAkBC,MAAlB,EAAD,EAA6BF,UAAU,CAACC,MAAX,CAAkBE,MAAlB,EAA7B,CAAD,CAAX,CAJ4D,CAM5D;AACA;AACH,KARD,EAVU,CAoBV;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,aAASC,SAAT,GAAqB;AACjB;AACA,UAAIC,UAAU,GAAG,IAAIZ,KAAK,CAACC,IAAN,CAAWC,MAAf,CAAsBT,QAAQ,CAAC,CAAD,CAA9B,EAAmCA,QAAQ,CAAC,CAAD,CAA3C,CAAjB,CAFiB,CAIjB;;AACAW,MAAAA,GAAG,CAACO,SAAJ,CAAcC,UAAd;AACH;AACJ,GA7DQ,EA6DN,CAACnB,QAAD,CA7DM,CAAT;AA+DA,sBACI;AAAK,IAAA,EAAE,EAAC,KAAR;AAAc,IAAA,KAAK,EAAE;AAACoB,MAAAA,MAAM,EAAE;AAAT;AAArB;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAtED;;GAAMvB,G;;KAAAA,G;AAwEN,eAAeA,GAAf","sourcesContent":["/*global kakao*/ \nimport React, { useContext, useEffect, useState } from 'react'\nimport { LatLngContext } from '../../contexts/LatLngContexts';\n\nconst Map = () =>{\n    var Lat, Lng;\n    const { isLatLng, setIsLatLng } = useContext(LatLngContext);\n\n    useEffect(()=>{\n        var mapContainer = document.getElementById('map'); // 지도를 표시할 div  \n        var mapOption = { \n            center: new kakao.maps.LatLng(isLatLng[0], isLatLng[1]), // 지도의 중심좌표\n            level: 4 // 지도의 확대 레벨\n        };\n\n        var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\n        \n        // 지도를 클릭했을때 클릭한 위치에 마커를 추가하도록 지도에 클릭이벤트를 등록합니다\n        kakao.maps.event.addListener(map, 'click', function(mouseEvent) { \n            // Lat = mouseEvent.latLng.getLat();\n            // Lng = mouseEvent.latLng.getLng();\n            // console.log(Lat, Lng);\n            setIsLatLng([mouseEvent.latLng.getLat(), mouseEvent.latLng.getLng()])\n\n            // 클릭한 위치에 마커를 표시합니다 \n            // addMarker(mouseEvent.latLng);     \n        });\n\n        // // 지도에 표시된 마커 객체를 가지고 있을 배열입니다\n        // var markers = [];\n\n        // // 마커 하나를 지도위에 표시합니다 \n        // addMarker(new kakao.maps.LatLng(isLatLng[0], isLatLng[1]));\n\n        // // 마커를 생성하고 지도위에 표시하는 함수입니다\n        // function addMarker(position) {\n        //     hideMarkers();\n\n        //     // 마커를 생성합니다\n        //     var marker = new kakao.maps.Marker({\n        //         position: position\n        //     });\n\n        //     // 마커가 지도 위에 표시되도록 설정합니다\n        //     marker.setMap(map);\n            \n        //     // 생성된 마커를 배열에 추가합니다\n        //     markers.push(marker);\n        // }\n\n        // // 배열에 추가된 마커들을 지도에 표시하거나 삭제하는 함수입니다\n        // function setMarkers(map) {\n        //     for (var i = 0; i < markers.length; i++) {\n        //         markers[i].setMap(map);\n        //     }            \n        // }\n\n        // // \"마커 감추기\" 버튼을 클릭하면 호출되어 배열에 추가된 마커를 지도에서 삭제하는 함수입니다\n        // function hideMarkers() {\n        //     setMarkers(null);    \n        // }\n\n        function setCenter() {            \n            // 이동할 위도 경도 위치를 생성합니다 \n            var moveLatLon = new kakao.maps.LatLng(isLatLng[0], isLatLng[1]);\n            \n            // 지도 중심을 이동 시킵니다\n            map.setCenter(moveLatLon);\n        }\n    }, [isLatLng]);\n\n    return (\n        <div id=\"map\" style={{height: \"100%\"}}></div> \n    );\n};\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}