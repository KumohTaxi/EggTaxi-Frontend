{"ast":null,"code":"var _jsxFileName = \"/Users/guhyeonwoo/Git/Projects/Taxi-Project/taxifront/src/Location.js\",\n    _s = $RefreshSig$();\n\n/*global kakao*/\nimport React, { useState, useEffect, forwardRef, useImperativeHandle } from 'react';\nimport { propTypes } from 'react-bootstrap/esm/Image';\nimport './Location.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Location = () => {\n  _s();\n\n  const [Lat, setLat] = useState('');\n  const [Lng, setLng] = useState('');\n  const tempLat = null;\n  const tempLng = null;\n  useEffect(() => {\n    var mapContainer = document.getElementById('map'),\n        // 지도를 표시할 div \n    mapOption = {\n      center: new kakao.maps.LatLng(36.14243941272335, 128.39433251647304),\n      // 지도의 중심좌표\n      level: 3 // 지도의 확대 레벨\n\n    }; // 지도를 표시할 div와  지도 옵션으로  지도를 생성합니다\n\n    var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 클릭했을때 클릭한 위치에 마커를 추가하도록 지도에 클릭이벤트를 등록합니다\n\n    kakao.maps.event.addListener(map, 'click', function (mouseEvent) {\n      tempLat = mouseEvent.latLng.getLat();\n      tempLan = mouseEvent.latLng.getLng();\n      setLat(tempLat);\n      setLng(tempLng); // 클릭한 위치에 마커를 표시합니다 \n\n      addMarker(mouseEvent.latLng);\n      console.log(Lat + ', ' + Lng);\n      console.log(mouseEvent.latLng.getLat() + ', ' + mouseEvent.latLng.getLng());\n    }); // 지도에 표시된 마커 객체를 가지고 있을 배열입니다\n\n    var markers = []; // 마커 하나를 지도위에 표시합니다 \n\n    addMarker(new kakao.maps.LatLng(36.14243941272335, 128.39433251647304)); // 마커를 생성하고 지도위에 표시하는 함수입니다\n\n    function addMarker(position) {\n      //전의 마크를 삭제합니다\n      setMarkers(null); // 마커를 생성합니다\n\n      var marker = new kakao.maps.Marker({\n        position: position\n      }); // 마커가 지도 위에 표시되도록 설정합니다\n\n      marker.setMap(map); // 생성된 마커를 배열에 추가합니다\n\n      markers.push(marker);\n    } // 배열에 추가된 마커들을 지도에 표시하거나 삭제하는 함수입니다\n\n\n    function setMarkers(map) {\n      for (var i = 0; i < markers.length; i++) {\n        markers[i].setMap(map);\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Location, \"jjB6G/TluttXnvEVgeTMUAMCduo=\");\n\n_c = Location;\nexport default Location;\n\nvar _c;\n\n$RefreshReg$(_c, \"Location\");","map":{"version":3,"sources":["/Users/guhyeonwoo/Git/Projects/Taxi-Project/taxifront/src/Location.js"],"names":["React","useState","useEffect","forwardRef","useImperativeHandle","propTypes","Location","Lat","setLat","Lng","setLng","tempLat","tempLng","mapContainer","document","getElementById","mapOption","center","kakao","maps","LatLng","level","map","Map","event","addListener","mouseEvent","latLng","getLat","tempLan","getLng","addMarker","console","log","markers","position","setMarkers","marker","Marker","setMap","push","i","length"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,EAAgDC,mBAAhD,QAA2E,OAA3E;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAMU,OAAO,GAAG,IAAhB;AACA,QAAMC,OAAO,GAAG,IAAhB;AAEAV,EAAAA,SAAS,CAAC,MAAI;AAEV,QAAIW,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAnB;AAAA,QAAmD;AAC/CC,IAAAA,SAAS,GAAG;AACRC,MAAAA,MAAM,EAAE,IAAIC,KAAK,CAACC,IAAN,CAAWC,MAAf,CAAsB,iBAAtB,EAAyC,kBAAzC,CADA;AAC8D;AACtEC,MAAAA,KAAK,EAAE,CAFC,CAEC;;AAFD,KADhB,CAFU,CAQV;;AACA,QAAIC,GAAG,GAAG,IAAIJ,KAAK,CAACC,IAAN,CAAWI,GAAf,CAAmBV,YAAnB,EAAiCG,SAAjC,CAAV,CATU,CAWV;;AACAE,IAAAA,KAAK,CAACC,IAAN,CAAWK,KAAX,CAAiBC,WAAjB,CAA6BH,GAA7B,EAAkC,OAAlC,EAA2C,UAASI,UAAT,EAAqB;AAE5Df,MAAAA,OAAO,GAAGe,UAAU,CAACC,MAAX,CAAkBC,MAAlB,EAAV;AACAC,MAAAA,OAAO,GAAGH,UAAU,CAACC,MAAX,CAAkBG,MAAlB,EAAV;AAEAtB,MAAAA,MAAM,CAACG,OAAD,CAAN;AACAD,MAAAA,MAAM,CAACE,OAAD,CAAN,CAN4D,CAQ5D;;AACAmB,MAAAA,SAAS,CAACL,UAAU,CAACC,MAAZ,CAAT;AAEAK,MAAAA,OAAO,CAACC,GAAR,CAAY1B,GAAG,GAAG,IAAN,GAAaE,GAAzB;AAEAuB,MAAAA,OAAO,CAACC,GAAR,CAAYP,UAAU,CAACC,MAAX,CAAkBC,MAAlB,KAA6B,IAA7B,GAAoCF,UAAU,CAACC,MAAX,CAAkBG,MAAlB,EAAhD;AAGH,KAhBD,EAZU,CA8BV;;AACA,QAAII,OAAO,GAAG,EAAd,CA/BU,CAiCV;;AACAH,IAAAA,SAAS,CAAC,IAAIb,KAAK,CAACC,IAAN,CAAWC,MAAf,CAAsB,iBAAtB,EAAyC,kBAAzC,CAAD,CAAT,CAlCU,CAoCV;;AACA,aAASW,SAAT,CAAmBI,QAAnB,EAA6B;AAEzB;AACAC,MAAAA,UAAU,CAAC,IAAD,CAAV,CAHyB,CAKzB;;AACA,UAAIC,MAAM,GAAG,IAAInB,KAAK,CAACC,IAAN,CAAWmB,MAAf,CAAsB;AAC/BH,QAAAA,QAAQ,EAAEA;AADqB,OAAtB,CAAb,CANyB,CAUzB;;AACAE,MAAAA,MAAM,CAACE,MAAP,CAAcjB,GAAd,EAXyB,CAazB;;AACAY,MAAAA,OAAO,CAACM,IAAR,CAAaH,MAAb;AACH,KApDS,CAsDV;;;AACA,aAASD,UAAT,CAAoBd,GAApB,EAAyB;AACrB,WAAK,IAAImB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,OAAO,CAACQ,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrCP,QAAAA,OAAO,CAACO,CAAD,CAAP,CAAWF,MAAX,CAAkBjB,GAAlB;AACH;AACJ;AAEJ,GA7DQ,EA6DN,EA7DM,CAAT;AAgEA,sBACI;AAAK,IAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAzED;;GAAMhB,Q;;KAAAA,Q;AA2EN,eAAeA,QAAf","sourcesContent":["/*global kakao*/ \nimport React, {useState, useEffect, forwardRef, useImperativeHandle } from 'react'\nimport { propTypes } from 'react-bootstrap/esm/Image';\nimport './Location.css';\n\nconst Location = () => {\n    const [Lat, setLat] = useState('');\n    const [Lng, setLng] = useState('');\n    const tempLat = null;\n    const tempLng = null;\n    \n    useEffect(()=>{\n\n        var mapContainer = document.getElementById('map'), // 지도를 표시할 div \n            mapOption = { \n                center: new kakao.maps.LatLng(36.14243941272335, 128.39433251647304), // 지도의 중심좌표\n                level: 3 // 지도의 확대 레벨\n            };\n\n        // 지도를 표시할 div와  지도 옵션으로  지도를 생성합니다\n        var map = new kakao.maps.Map(mapContainer, mapOption); \n\n        // 지도를 클릭했을때 클릭한 위치에 마커를 추가하도록 지도에 클릭이벤트를 등록합니다\n        kakao.maps.event.addListener(map, 'click', function(mouseEvent) {     \n\n            tempLat = mouseEvent.latLng.getLat();\n            tempLan = mouseEvent.latLng.getLng(); \n\n            setLat(tempLat);\n            setLng(tempLng);\n            \n            // 클릭한 위치에 마커를 표시합니다 \n            addMarker(mouseEvent.latLng);\n\n            console.log(Lat + ', ' + Lng);\n\n            console.log(mouseEvent.latLng.getLat() + ', ' + mouseEvent.latLng.getLng())\n\n            \n        });\n\n        // 지도에 표시된 마커 객체를 가지고 있을 배열입니다\n        var markers = [];\n\n        // 마커 하나를 지도위에 표시합니다 \n        addMarker(new kakao.maps.LatLng(36.14243941272335, 128.39433251647304));\n\n        // 마커를 생성하고 지도위에 표시하는 함수입니다\n        function addMarker(position) {\n            \n            //전의 마크를 삭제합니다\n            setMarkers(null); \n\n            // 마커를 생성합니다\n            var marker = new kakao.maps.Marker({\n                position: position\n            });\n\n            // 마커가 지도 위에 표시되도록 설정합니다\n            marker.setMap(map);\n            \n            // 생성된 마커를 배열에 추가합니다\n            markers.push(marker);            \n        }\n\n        // 배열에 추가된 마커들을 지도에 표시하거나 삭제하는 함수입니다\n        function setMarkers(map) {\n            for (var i = 0; i < markers.length; i++) {\n                markers[i].setMap(map);\n            }  \n        }\n        \n    }, [])\n\n\n    return (\n        <div id=\"map\"></div>\n    )\n}\n\nexport default Location;"]},"metadata":{},"sourceType":"module"}