{"ast":null,"code":"var _jsxFileName = \"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/modals/MakeModal.js\",\n    _s = $RefreshSig$();\n\nimport { Modal, Button, Form, Badge } from 'react-bootstrap';\nimport './MakeModal.css';\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MakeModal = props => {\n  _s();\n\n  var todayDate = new Date();\n  const [Year, setYear] = useState(todayDate.getFullYear());\n  const [Month, setMonth] = useState(todayDate.getMonth() + 1);\n  const [Day, setDay] = useState(todayDate.getDate());\n  const [Hour, setHour] = useState(todayDate.getHours());\n  const [Minute, setMinute] = useState((parseInt(todayDate.getMinutes() / 10 + 1) * 10).toString());\n  const [Destination, setDestination] = useState(\"\"); // const [Auth, setAuth] = useState(\"NO\");\n  // const [Gender, setGender] = useState(\"\");\n\n  const goToday = () => {\n    if (Day !== todayDate.getDate()) {\n      setYear(todayDate.getFullYear());\n      setMonth(todayDate.getMonth() + 1);\n      setDay(todayDate.getDate());\n    }\n  };\n\n  const goTomorrow = () => {\n    if (Day === todayDate.getDate()) {\n      var tomorrowDate = new Date(todayDate.setDate(todayDate.getDate() + 1));\n      setYear(tomorrowDate.getFullYear());\n      setMonth(tomorrowDate.getMonth() + 1);\n      setDay(tomorrowDate.getDate());\n    }\n  };\n\n  const exceptionTime = () => {\n    if (parseInt(Hour) >= 10 && parseInt(Hour) <= 22 && parseInt(Minute) >= 0 && parseInt(Minute) <= 59) {\n      props.onHide();\n      console.log(Year + \"\\n\" + Month + \"\\n\" + Day + \"\\n\" + Hour + \"\\n\" + Minute + \"\\n\" + Destination);\n    } else {\n      alert(\"시간을 알맞은 범위 내로 설정해주세요.\");\n    }\n  }; // const CheckANY=()=>{\n  //     setGender(\"ANY\")\n  // };\n  // const CheckMALE=()=>{\n  //     setGender(\"MALE\")\n  // };\n  // const CheckFEMALE=()=>{\n  //     setGender(\"FEMALE\")\n  // };\n  // const FormCheck=()=>{\n  //     return(\n  //         <div className='genderchoice'>\n  //             <p className='genderP'>\n  //                 성별 여부\n  //             </p>\n  //             <Form className='formchecks'>\n  //                 {['radio'].map((type) => (\n  //                     <div key={`inline-${type}`} className=\"mb-3\">\n  //                     <Form.Check\n  //                         inline\n  //                         onClick={CheckANY}\n  //                         label=\"상관없음\"\n  //                         name=\"group1\"\n  //                         type={type}\n  //                         id={`inline-${type}-1`}\n  //                     />\n  //                     <Form.Check\n  //                         inline\n  //                         onClick={CheckMALE}\n  //                         label=\"남자만\"\n  //                         name=\"group1\"\n  //                         type={type}\n  //                         id={`inline-${type}-2`}\n  //                     />\n  //                     <Form.Check\n  //                         inline\n  //                         onClick={CheckFEMALE}\n  //                         label=\"여자만\"\n  //                         name='group1'\n  //                         type={type}\n  //                         id={`inline-${type}-3`}\n  //                     />\n  //                     </div>\n  //                 ))}\n  //             </Form>\n  //         </div>\n  //     );\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, { ...props,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        style: {\n          backgroundColor: \"#282828\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          className: \"MakeTitle\",\n          id: \"contained-modal-title-vcenter\",\n          children: \"Make Room Modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"MakeDate\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"subtitle\",\n            children: \"\\uB0A0\\uC9DC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vr\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"subcontent\",\n            children: [/*#__PURE__*/_jsxDEV(Badge, {\n              id: \"todaydate\",\n              bg: \"light\",\n              text: \"dark\",\n              children: [Year, \"\\uB144 \", Month, \"\\uC6D4 \", Day, \"\\uC77C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"buttonDate\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-dark\",\n                className: \"buttonDateLeft\",\n                onClick: goToday,\n                children: \"\\uC624\\uB298\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-dark\",\n                className: \"buttonDateRight\",\n                onClick: goTomorrow,\n                children: \"\\uB0B4\\uC77C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"MakeTime\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"subtitle\",\n            children: \"\\uC2DC\\uAC04\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vr\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"subcontent\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"choiceHour\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                className: \"inputHour\",\n                placeholder: Hour,\n                onChange: event => setHour(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                className: \"timeP\",\n                bg: \"light\",\n                text: \"dark\",\n                children: \"\\uC2DC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"choiceMinute\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                className: \"inputMinute\",\n                placeholder: Minute,\n                onChange: event => setMinute(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                className: \"timeP\",\n                bg: \"light\",\n                text: \"dark\",\n                children: \"\\uBD84\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"MakeDestination\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"subtitle\",\n            children: \"\\uBAA9\\uC801\\uC9C0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vr\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"subcontent\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              className: \"inputDestination\",\n              placeholder: \"EX) \\uAD6C\\uBBF8\\uC5ED \\uD6C4\\uBB38\",\n              onChange: event => setDestination(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        style: {\n          backgroundColor: \"#FFFCEE\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"MakeButtonLeft\",\n          onClick: props.onHide,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"MakeButtonRight\",\n          onClick: exceptionTime,\n          children: \"Make\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MakeModal, \"82j2gZtEtFNtUyIWSLTrEcHKOTQ=\");\n\n_c = MakeModal;\nexport default MakeModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"MakeModal\");","map":{"version":3,"sources":["/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/modals/MakeModal.js"],"names":["Modal","Button","Form","Badge","React","useState","useRef","MakeModal","props","todayDate","Date","Year","setYear","getFullYear","Month","setMonth","getMonth","Day","setDay","getDate","Hour","setHour","getHours","Minute","setMinute","parseInt","getMinutes","toString","Destination","setDestination","goToday","goTomorrow","tomorrowDate","setDate","exceptionTime","onHide","console","log","alert","backgroundColor","event","target","value"],"mappings":"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","sourcesContent":["import {Modal, Button, Form, Badge} from 'react-bootstrap';\nimport './MakeModal.css';\nimport React, { useState, useRef } from 'react';\n\nconst MakeModal=(props)=>{\n    var todayDate = new Date();\n\n    const [Year, setYear] = useState(todayDate.getFullYear());\n    const [Month, setMonth] = useState(todayDate.getMonth()+1);\n    const [Day, setDay] = useState(todayDate.getDate());\n    const [Hour, setHour] = useState(todayDate.getHours());\n    const [Minute, setMinute] = useState((parseInt(todayDate.getMinutes()/10+1)*10).toString());\n    const [Destination, setDestination] = useState(\"\");\n    // const [Auth, setAuth] = useState(\"NO\");\n    // const [Gender, setGender] = useState(\"\");\n\n    const goToday=()=>{\n        if(Day !== todayDate.getDate()){\n            setYear(todayDate.getFullYear());\n            setMonth(todayDate.getMonth()+1);\n            setDay(todayDate.getDate());\n        }\n    }\n    const goTomorrow=()=>{\n        if(Day === todayDate.getDate()){\n            var tomorrowDate = new Date(todayDate.setDate(todayDate.getDate() + 1));\n            setYear(tomorrowDate.getFullYear());\n            setMonth(tomorrowDate.getMonth()+1);\n            setDay(tomorrowDate.getDate());\n        }\n    };\n\n    const exceptionTime=()=>{\n        if(parseInt(Hour) >= 10 && parseInt(Hour) <= 22 && parseInt(Minute) >= 0 && parseInt(Minute) <= 59){\n            props.onHide();\n            console.log(Year+\"\\n\"+Month+\"\\n\"+Day+\"\\n\"+Hour+\"\\n\"+Minute+\"\\n\"+Destination);\n        }\n        else{\n            alert(\"시간을 알맞은 범위 내로 설정해주세요.\");\n        }\n    }\n\n    // const CheckANY=()=>{\n    //     setGender(\"ANY\")\n    // };\n    // const CheckMALE=()=>{\n    //     setGender(\"MALE\")\n    // };\n    // const CheckFEMALE=()=>{\n    //     setGender(\"FEMALE\")\n    // };\n\n    // const FormCheck=()=>{\n    //     return(\n    //         <div className='genderchoice'>\n    //             <p className='genderP'>\n    //                 성별 여부\n    //             </p>\n    //             <Form className='formchecks'>\n    //                 {['radio'].map((type) => (\n    //                     <div key={`inline-${type}`} className=\"mb-3\">\n    //                     <Form.Check\n    //                         inline\n    //                         onClick={CheckANY}\n    //                         label=\"상관없음\"\n    //                         name=\"group1\"\n    //                         type={type}\n    //                         id={`inline-${type}-1`}\n    //                     />\n    //                     <Form.Check\n    //                         inline\n    //                         onClick={CheckMALE}\n    //                         label=\"남자만\"\n    //                         name=\"group1\"\n    //                         type={type}\n    //                         id={`inline-${type}-2`}\n    //                     />\n    //                     <Form.Check\n    //                         inline\n    //                         onClick={CheckFEMALE}\n    //                         label=\"여자만\"\n    //                         name='group1'\n    //                         type={type}\n    //                         id={`inline-${type}-3`}\n    //                     />\n    //                     </div>\n    //                 ))}\n    //             </Form>\n    //         </div>\n    //     );\n    // };\n\n    return(\n        <div>\n            <Modal\n                {...props}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                >\n                <Modal.Header style={{backgroundColor: \"#282828\"}}>\n                    <Modal.Title className='MakeTitle' id=\"contained-modal-title-vcenter\">\n                    Make Room Modal\n                    </Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <div className='MakeDate'>\n                        <div className='subtitle'>\n                            날짜\n                        </div>\n                        <div className=\"vr\" />\n                        <div className='subcontent'>\n                            <Badge id='todaydate' bg=\"light\" text=\"dark\">{Year}년 {Month}월 {Day}일</Badge>\n                            <div className='buttonDate'>\n                                <Button variant=\"outline-dark\" className='buttonDateLeft' onClick={goToday}>오늘</Button>\n                                <Button variant=\"outline-dark\" className='buttonDateRight' onClick={goTomorrow}>내일</Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='MakeTime'>\n                        <div className='subtitle'>\n                            시간\n                        </div>\n                        <div className=\"vr\" />\n                        <div className='subcontent'>\n                            <div className='choiceHour'>\n                                <Form.Control className='inputHour' placeholder={Hour} onChange={(event)=> setHour(event.target.value)}/>\n                                <Badge className='timeP' bg='light' text='dark'>시</Badge>\n                            </div>\n                            <div className='choiceMinute'>\n                                <Form.Control className='inputMinute' placeholder={Minute} onChange={(event)=> setMinute(event.target.value)}/>\n                                <Badge className='timeP' bg='light' text='dark'>분</Badge>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='MakeDestination'>\n                        <div className='subtitle'>\n                            목적지\n                        </div>\n                        <div className=\"vr\" />\n                        <div className='subcontent'> \n                            <Form.Control className='inputDestination' placeholder=\"EX) 구미역 후문\" onChange={(event)=> setDestination(event.target.value)}/>\n                        </div>\n                    </div>\n                    {/* <div className='MakeOther'>\n                        <div className='subtitle' style={{whiteSpace: \"pre-wrap\"}}>\n                            참가자{\"\\n\"}설정\n                        </div>\n                        <div className=\"vr\" />\n                        <div className='otherContent'>\n                            <div className='univSwitch'>\n                                <Form.Check \n                                    type=\"switch\"\n                                    id=\"custom-switch\"\n                                    label=\"학교인증 여부\"\n                                    onChange={()=>{\n                                        setcheckHidden(!checkHidden);\n                                        Auth === \"YES\" ? setAuth(\"NO\") : setAuth(\"YES\");\n                                    }}\n                                />\n                            </div>\n                            {checkHidden && <FormCheck />}\n                        </div>               \n                    </div> */}\n                </Modal.Body>\n\n                <Modal.Footer style={{backgroundColor: \"#FFFCEE\"}}>\n                    <Button className='MakeButtonLeft' onClick={props.onHide}>Cancel</Button>\n                    <Button className='MakeButtonRight' onClick={exceptionTime}>Make</Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    );\n}\n\nexport default MakeModal;"]},"metadata":{},"sourceType":"module"}