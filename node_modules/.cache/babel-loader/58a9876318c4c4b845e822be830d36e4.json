{"ast":null,"code":"var _jsxFileName = \"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/components/Maps/Map.js\",\n    _s = $RefreshSig$();\n\n/*global kakao*/\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Map = () => {\n  _s();\n\n  const [Lat, setLat] = useState(36.142410487698);\n  const [Lng, setLng] = useState(128.39430145218606);\n  useEffect(() => {\n    var mapContainer = document.getElementById('map'),\n        // 지도를 표시할 div  \n    mapOption = {\n      center: new kakao.maps.LatLng(36.142410487698, 128.39430145218606),\n      // 지도의 중심좌표\n      level: 5 // 지도의 확대 레벨\n\n    };\n    var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\n    // 지도를 클릭했을때 클릭한 위치에 마커를 추가하도록 지도에 클릭이벤트를 등록합니다\n\n    kakao.maps.event.addListener(map, 'click', function (mouseEvent) {\n      setLat(mouseEvent.latLng.getLat());\n      setLng(mouseEvent.latLng.getLng());\n      console.log(Lat, Lng); // 클릭한 위치에 마커를 표시합니다 \n      // addMarker(mouseEvent.latLng); \n    }); // 지도에 표시된 마커 객체를 가지고 있을 배열입니다\n\n    var markers = []; // 마커 하나를 지도위에 표시합니다 \n\n    addMarker(new kakao.maps.LatLng(Lat, Lng)); // 마커를 생성하고 지도위에 표시하는 함수입니다\n\n    function addMarker(position) {\n      hideMarkers(); // 마커를 생성합니다\n\n      var marker = new kakao.maps.Marker({\n        position: position\n      }); // 마커가 지도 위에 표시되도록 설정합니다\n\n      marker.setMap(map); // 생성된 마커를 배열에 추가합니다\n\n      markers.push(marker);\n    } // 배열에 추가된 마커들을 지도에 표시하거나 삭제하는 함수입니다\n\n\n    function setMarkers(map) {\n      for (var i = 0; i < markers.length; i++) {\n        markers[i].setMap(map);\n      }\n    } // // \"마커 보이기\" 버튼을 클릭하면 호출되어 배열에 추가된 마커를 지도에 표시하는 함수입니다\n    // function showMarkers() {\n    //     setMarkers(map)    \n    // }\n    // \"마커 감추기\" 버튼을 클릭하면 호출되어 배열에 추가된 마커를 지도에서 삭제하는 함수입니다\n\n\n    function hideMarkers() {\n      setMarkers(null);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      height: \"100%\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Map, \"HyZ2BkllAE8SPQzzC6jk4o6RHMg=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/components/Maps/Map.js"],"names":["React","useEffect","useState","Map","Lat","setLat","Lng","setLng","mapContainer","document","getElementById","mapOption","center","kakao","maps","LatLng","level","map","event","addListener","mouseEvent","latLng","getLat","getLng","console","log","markers","addMarker","position","hideMarkers","marker","Marker","setMap","push","setMarkers","i","length","height"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,GAAG,GAAC,MAAI;AAAA;;AACV,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBH,QAAQ,CAAC,eAAD,CAA9B;AACA,QAAM,CAACI,GAAD,EAAMC,MAAN,IAAgBL,QAAQ,CAAC,kBAAD,CAA9B;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIO,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAnB;AAAA,QAAmD;AACnDC,IAAAA,SAAS,GAAG;AACRC,MAAAA,MAAM,EAAE,IAAIC,KAAK,CAACC,IAAN,CAAWC,MAAf,CAAsB,eAAtB,EAAuC,kBAAvC,CADA;AAC4D;AACpEC,MAAAA,KAAK,EAAE,CAFC,CAEC;;AAFD,KADZ;AAMA,QAAIC,GAAG,GAAG,IAAIJ,KAAK,CAACC,IAAN,CAAWX,GAAf,CAAmBK,YAAnB,EAAiCG,SAAjC,CAAV,CAPU,CAO6C;AAEvD;;AACAE,IAAAA,KAAK,CAACC,IAAN,CAAWI,KAAX,CAAiBC,WAAjB,CAA6BF,GAA7B,EAAkC,OAAlC,EAA2C,UAASG,UAAT,EAAqB;AAE5Df,MAAAA,MAAM,CAACe,UAAU,CAACC,MAAX,CAAkBC,MAAlB,EAAD,CAAN;AACAf,MAAAA,MAAM,CAACa,UAAU,CAACC,MAAX,CAAkBE,MAAlB,EAAD,CAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYrB,GAAZ,EAAiBE,GAAjB,EAJ4D,CAK5D;AACA;AACH,KAPD,EAVU,CAmBV;;AACA,QAAIoB,OAAO,GAAG,EAAd,CApBU,CAsBV;;AACAC,IAAAA,SAAS,CAAC,IAAId,KAAK,CAACC,IAAN,CAAWC,MAAf,CAAsBX,GAAtB,EAA2BE,GAA3B,CAAD,CAAT,CAvBU,CAyBV;;AACA,aAASqB,SAAT,CAAmBC,QAAnB,EAA6B;AAEzBC,MAAAA,WAAW,GAFc,CAGzB;;AACA,UAAIC,MAAM,GAAG,IAAIjB,KAAK,CAACC,IAAN,CAAWiB,MAAf,CAAsB;AAC/BH,QAAAA,QAAQ,EAAEA;AADqB,OAAtB,CAAb,CAJyB,CAQzB;;AACAE,MAAAA,MAAM,CAACE,MAAP,CAAcf,GAAd,EATyB,CAWzB;;AACAS,MAAAA,OAAO,CAACO,IAAR,CAAaH,MAAb;AACH,KAvCS,CAyCV;;;AACA,aAASI,UAAT,CAAoBjB,GAApB,EAAyB;AACrB,WAAK,IAAIkB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,OAAO,CAACU,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrCT,QAAAA,OAAO,CAACS,CAAD,CAAP,CAAWH,MAAX,CAAkBf,GAAlB;AACH;AACJ,KA9CS,CAgDV;AACA;AACA;AACA;AAEA;;;AACA,aAASY,WAAT,GAAuB;AACnBK,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ,GAzDQ,CAAT;AA4DA,sBACI;AAAK,IAAA,EAAE,EAAC,KAAR;AAAc,IAAA,KAAK,EAAE;AAACG,MAAAA,MAAM,EAAE;AAAT;AAArB;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAnED;;GAAMlC,G;;KAAAA,G;AAqEN,eAAeA,GAAf","sourcesContent":["/*global kakao*/ \nimport React, { useEffect, useState } from 'react'\n\nconst Map=()=>{\n    const [Lat, setLat] = useState(36.142410487698);\n    const [Lng, setLng] = useState(128.39430145218606);\n\n    useEffect(()=>{\n        var mapContainer = document.getElementById('map'), // 지도를 표시할 div  \n        mapOption = { \n            center: new kakao.maps.LatLng(36.142410487698, 128.39430145218606), // 지도의 중심좌표\n            level: 5 // 지도의 확대 레벨\n        };\n\n        var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\n\n        // 지도를 클릭했을때 클릭한 위치에 마커를 추가하도록 지도에 클릭이벤트를 등록합니다\n        kakao.maps.event.addListener(map, 'click', function(mouseEvent) { \n            \n            setLat(mouseEvent.latLng.getLat());\n            setLng(mouseEvent.latLng.getLng());\n            console.log(Lat, Lng);\n            // 클릭한 위치에 마커를 표시합니다 \n            // addMarker(mouseEvent.latLng); \n        });\n\n        // 지도에 표시된 마커 객체를 가지고 있을 배열입니다\n        var markers = [];\n\n        // 마커 하나를 지도위에 표시합니다 \n        addMarker(new kakao.maps.LatLng(Lat, Lng));\n\n        // 마커를 생성하고 지도위에 표시하는 함수입니다\n        function addMarker(position) {\n\n            hideMarkers()\n            // 마커를 생성합니다\n            var marker = new kakao.maps.Marker({\n                position: position\n            });\n\n            // 마커가 지도 위에 표시되도록 설정합니다\n            marker.setMap(map);\n            \n            // 생성된 마커를 배열에 추가합니다\n            markers.push(marker);\n        }\n\n        // 배열에 추가된 마커들을 지도에 표시하거나 삭제하는 함수입니다\n        function setMarkers(map) {\n            for (var i = 0; i < markers.length; i++) {\n                markers[i].setMap(map);\n            }            \n        }\n\n        // // \"마커 보이기\" 버튼을 클릭하면 호출되어 배열에 추가된 마커를 지도에 표시하는 함수입니다\n        // function showMarkers() {\n        //     setMarkers(map)    \n        // }\n\n        // \"마커 감추기\" 버튼을 클릭하면 호출되어 배열에 추가된 마커를 지도에서 삭제하는 함수입니다\n        function hideMarkers() {\n            setMarkers(null);    \n        }   \n    })\n\n\n    return (\n        <div id=\"map\" style={{height: \"100%\"}}></div> \n    )\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}