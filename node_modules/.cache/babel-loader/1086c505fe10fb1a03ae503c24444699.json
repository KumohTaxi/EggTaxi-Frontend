{"ast":null,"code":"var _jsxFileName = \"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/components/Maps/Map.js\",\n    _s = $RefreshSig$();\n\n/*global kakao*/\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Map = () => {\n  _s();\n\n  const [LatLng, setLatLng] = useState([36.142410487698, 128.39430145218606]);\n  useEffect(() => {\n    var mapContainer = document.getElementById('map'),\n        // 지도를 표시할 div  \n    mapOption = {\n      center: new kakao.maps.LatLng(LatLng[0], LatLng[1]),\n      // 지도의 중심좌표\n      level: 4 // 지도의 확대 레벨\n\n    };\n    var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\n    // 지도가 이동, 확대, 축소로 인해 중심좌표가 변경되면 마지막 파라미터로 넘어온 함수를 호출하도록 이벤트를 등록합니다\n\n    kakao.maps.event.addListener(map, 'center_changed', function () {\n      // 지도의  레벨을 얻어옵니다\n      var level = map.getLevel(); // 지도의 중심좌표를 얻어옵니다 \n\n      var latlng = map.getCenter();\n      setLatLng([latlng.getLat(), latlng.getLng()]);\n      var message = '<p>지도 레벨은 ' + level + ' 이고</p>';\n      message += '<p>중심 좌표는 위도 ' + latlng.getLat() + ', 경도 ' + latlng.getLng() + '입니다</p>';\n      var resultDiv = document.getElementById('result');\n      resultDiv.innerHTML = message;\n    });\n    var markers = []; // 마커 하나를 지도위에 표시합니다 \n\n    addMarker(new kakao.maps.LatLng(36.142410487698, 128.39430145218606)); // 마커를 생성하고 지도위에 표시하는 함수입니다\n\n    function addMarker(position) {\n      hideMarkers(); // 마커를 생성합니다\n\n      var marker = new kakao.maps.Marker({\n        position: position\n      }); // 마커가 지도 위에 표시되도록 설정합니다\n\n      marker.setMap(map); // 생성된 마커를 배열에 추가합니다\n\n      markers.push(marker);\n    } // 배열에 추가된 마커들을 지도에 표시하거나 삭제하는 함수입니다\n\n\n    function setMarkers(map) {\n      for (var i = 0; i < markers.length; i++) {\n        markers[i].setMap(map);\n      }\n    } // \"마커 감추기\" 버튼을 클릭하면 호출되어 배열에 추가된 마커를 지도에서 삭제하는 함수입니다\n\n\n    function hideMarkers() {\n      setMarkers(null);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      height: \"100%\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Map, \"ZeXa3K38oxBv8ekhjMP7EzVAu3g=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/components/Maps/Map.js"],"names":["React","useEffect","useState","Map","LatLng","setLatLng","mapContainer","document","getElementById","mapOption","center","kakao","maps","level","map","event","addListener","getLevel","latlng","getCenter","getLat","getLng","message","resultDiv","innerHTML","markers","addMarker","position","hideMarkers","marker","Marker","setMap","push","setMarkers","i","length","height"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,GAAG,GAAC,MAAI;AAAA;;AACV,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,CAAC,eAAD,EAAkB,kBAAlB,CAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIK,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAnB;AAAA,QAAmD;AACnDC,IAAAA,SAAS,GAAG;AACRC,MAAAA,MAAM,EAAE,IAAIC,KAAK,CAACC,IAAN,CAAWR,MAAf,CAAsBA,MAAM,CAAC,CAAD,CAA5B,EAAiCA,MAAM,CAAC,CAAD,CAAvC,CADA;AAC6C;AACrDS,MAAAA,KAAK,EAAE,CAFC,CAEC;;AAFD,KADZ;AAMA,QAAIC,GAAG,GAAG,IAAIH,KAAK,CAACC,IAAN,CAAWT,GAAf,CAAmBG,YAAnB,EAAiCG,SAAjC,CAAV,CAPU,CAO6C;AAEvD;;AACAE,IAAAA,KAAK,CAACC,IAAN,CAAWG,KAAX,CAAiBC,WAAjB,CAA6BF,GAA7B,EAAkC,gBAAlC,EAAoD,YAAW;AAE3D;AACA,UAAID,KAAK,GAAGC,GAAG,CAACG,QAAJ,EAAZ,CAH2D,CAK3D;;AACA,UAAIC,MAAM,GAAGJ,GAAG,CAACK,SAAJ,EAAb;AAEAd,MAAAA,SAAS,CAAC,CAACa,MAAM,CAACE,MAAP,EAAD,EAAkBF,MAAM,CAACG,MAAP,EAAlB,CAAD,CAAT;AAEA,UAAIC,OAAO,GAAG,eAAeT,KAAf,GAAuB,SAArC;AACAS,MAAAA,OAAO,IAAI,kBAAkBJ,MAAM,CAACE,MAAP,EAAlB,GAAoC,OAApC,GAA8CF,MAAM,CAACG,MAAP,EAA9C,GAAgE,SAA3E;AAEA,UAAIE,SAAS,GAAGhB,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAhB;AACAe,MAAAA,SAAS,CAACC,SAAV,GAAsBF,OAAtB;AAEH,KAhBD;AAkBA,QAAIG,OAAO,GAAG,EAAd,CA5BU,CA8BV;;AACAC,IAAAA,SAAS,CAAC,IAAIf,KAAK,CAACC,IAAN,CAAWR,MAAf,CAAsB,eAAtB,EAAuC,kBAAvC,CAAD,CAAT,CA/BU,CAiCV;;AACA,aAASsB,SAAT,CAAmBC,QAAnB,EAA6B;AAEzBC,MAAAA,WAAW,GAFc,CAGzB;;AACA,UAAIC,MAAM,GAAG,IAAIlB,KAAK,CAACC,IAAN,CAAWkB,MAAf,CAAsB;AAC/BH,QAAAA,QAAQ,EAAEA;AADqB,OAAtB,CAAb,CAJyB,CAQzB;;AACAE,MAAAA,MAAM,CAACE,MAAP,CAAcjB,GAAd,EATyB,CAWzB;;AACAW,MAAAA,OAAO,CAACO,IAAR,CAAaH,MAAb;AACH,KA/CS,CAiDV;;;AACA,aAASI,UAAT,CAAoBnB,GAApB,EAAyB;AACrB,WAAK,IAAIoB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,OAAO,CAACU,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrCT,QAAAA,OAAO,CAACS,CAAD,CAAP,CAAWH,MAAX,CAAkBjB,GAAlB;AACH;AACJ,KAtDS,CAwDV;;;AACA,aAASc,WAAT,GAAuB;AACnBK,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ,GA5DQ,CAAT;AA+DA,sBACI;AAAK,IAAA,EAAE,EAAC,KAAR;AAAc,IAAA,KAAK,EAAE;AAACG,MAAAA,MAAM,EAAE;AAAT;AAArB;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CArED;;GAAMjC,G;;KAAAA,G;AAuEN,eAAeA,GAAf","sourcesContent":["/*global kakao*/ \nimport React, { useEffect, useState } from 'react'\n\nconst Map=()=>{\n    const [LatLng, setLatLng] = useState([36.142410487698, 128.39430145218606]);\n\n    useEffect(()=>{\n        var mapContainer = document.getElementById('map'), // 지도를 표시할 div  \n        mapOption = { \n            center: new kakao.maps.LatLng(LatLng[0], LatLng[1]), // 지도의 중심좌표\n            level: 4 // 지도의 확대 레벨\n        };\n\n        var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\n\n        // 지도가 이동, 확대, 축소로 인해 중심좌표가 변경되면 마지막 파라미터로 넘어온 함수를 호출하도록 이벤트를 등록합니다\n        kakao.maps.event.addListener(map, 'center_changed', function() {\n\n            // 지도의  레벨을 얻어옵니다\n            var level = map.getLevel();\n\n            // 지도의 중심좌표를 얻어옵니다 \n            var latlng = map.getCenter(); \n\n            setLatLng([latlng.getLat(), latlng.getLng()])\n\n            var message = '<p>지도 레벨은 ' + level + ' 이고</p>';\n            message += '<p>중심 좌표는 위도 ' + latlng.getLat() + ', 경도 ' + latlng.getLng() + '입니다</p>';\n\n            var resultDiv = document.getElementById('result');\n            resultDiv.innerHTML = message;\n\n        });\n\n        var markers = [];\n\n        // 마커 하나를 지도위에 표시합니다 \n        addMarker(new kakao.maps.LatLng(36.142410487698, 128.39430145218606));\n\n        // 마커를 생성하고 지도위에 표시하는 함수입니다\n        function addMarker(position) {\n\n            hideMarkers()\n            // 마커를 생성합니다\n            var marker = new kakao.maps.Marker({\n                position: position\n            });\n\n            // 마커가 지도 위에 표시되도록 설정합니다\n            marker.setMap(map);\n            \n            // 생성된 마커를 배열에 추가합니다\n            markers.push(marker);\n        }\n\n        // 배열에 추가된 마커들을 지도에 표시하거나 삭제하는 함수입니다\n        function setMarkers(map) {\n            for (var i = 0; i < markers.length; i++) {\n                markers[i].setMap(map);\n            }            \n        }\n\n        // \"마커 감추기\" 버튼을 클릭하면 호출되어 배열에 추가된 마커를 지도에서 삭제하는 함수입니다\n        function hideMarkers() {\n            setMarkers(null);    \n        }   \n    })\n\n\n    return (\n        <div id=\"map\" style={{height: \"100%\"}}></div> \n    )\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}