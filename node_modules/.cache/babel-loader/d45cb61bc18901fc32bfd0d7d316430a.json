{"ast":null,"code":"var _jsxFileName = \"/Users/guhyeonwoo/Git/Projects/Taxi-Project/taxifront/src/Location.js\",\n    _s = $RefreshSig$();\n\n/*global kakao*/\nimport React, { useState, useEffect } from 'react';\nimport { propTypes } from 'react-bootstrap/esm/Image';\nimport './Location.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Location = props => {\n  _s();\n\n  const map = 0;\n  useEffect(() => {\n    var mapContainer = document.getElementById('map'),\n        // 지도를 표시할 div \n    mapOption = {\n      center: new kakao.maps.LatLng(36.14243941272335, 128.39433251647304),\n      // 지도의 중심좌표\n      level: 3 // 지도의 확대 레벨\n\n    }; // 지도를 표시할 div와  지도 옵션으로  지도를 생성합니다\n\n    var map = new kakao.maps.Map(mapContainer, mapOption);\n    var marker = new kakao.maps.Marker({\n      map: map,\n      position: new kakao.maps.LatLng(36.14243941272335, 128.39433251647304)\n    });\n  }, []);\n  useEffect(() => {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Location, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n\n_c = Location;\nexport default Location;\n\nvar _c;\n\n$RefreshReg$(_c, \"Location\");","map":{"version":3,"sources":["/Users/guhyeonwoo/Git/Projects/Taxi-Project/taxifront/src/Location.js"],"names":["React","useState","useEffect","propTypes","Location","props","map","mapContainer","document","getElementById","mapOption","center","kakao","maps","LatLng","level","Map","marker","Marker","position"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAMC,GAAG,GAAG,CAAZ;AAEAJ,EAAAA,SAAS,CAAC,MAAI;AAEV,QAAIK,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAnB;AAAA,QAAmD;AAC/CC,IAAAA,SAAS,GAAG;AACRC,MAAAA,MAAM,EAAE,IAAIC,KAAK,CAACC,IAAN,CAAWC,MAAf,CAAsB,iBAAtB,EAAyC,kBAAzC,CADA;AAC8D;AACtEC,MAAAA,KAAK,EAAE,CAFC,CAEC;;AAFD,KADhB,CAFU,CAQV;;AACA,QAAKT,GAAG,GAAG,IAAIM,KAAK,CAACC,IAAN,CAAWG,GAAf,CAAmBT,YAAnB,EAAiCG,SAAjC,CAAX;AAEA,QAAIO,MAAM,GAAG,IAAIL,KAAK,CAACC,IAAN,CAAWK,MAAf,CAAsB;AAC/BZ,MAAAA,GAAG,EAAEA,GAD0B;AAE/Ba,MAAAA,QAAQ,EAAE,IAAIP,KAAK,CAACC,IAAN,CAAWC,MAAf,CAAsB,iBAAtB,EAAyC,kBAAzC;AAFqB,KAAtB,CAAb;AAIH,GAfQ,EAeN,EAfM,CAAT;AAiBAZ,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,CAAT;AAIA,sBACI;AAAK,IAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CA3BD;;GAAME,Q;;KAAAA,Q;AA6BN,eAAeA,QAAf","sourcesContent":["/*global kakao*/ \nimport React, {useState, useEffect } from 'react'\nimport { propTypes } from 'react-bootstrap/esm/Image';\nimport './Location.css';\n\nconst Location = (props) => {\n    const map = 0 ;\n\n    useEffect(()=>{\n\n        var mapContainer = document.getElementById('map'), // 지도를 표시할 div \n            mapOption = { \n                center: new kakao.maps.LatLng(36.14243941272335, 128.39433251647304), // 지도의 중심좌표\n                level: 3 // 지도의 확대 레벨\n            };\n\n        // 지도를 표시할 div와  지도 옵션으로  지도를 생성합니다\n        var  map = new kakao.maps.Map(mapContainer, mapOption); \n\n        var marker = new kakao.maps.Marker({\n            map: map,\n            position: new kakao.maps.LatLng(36.14243941272335, 128.39433251647304)\n        });\n    }, [])\n\n    useEffect(() => {\n        \n    })\n\n    return (\n        <div id=\"map\"></div>\n    )\n};\n\nexport default Location;"]},"metadata":{},"sourceType":"module"}