{"ast":null,"code":"var _jsxFileName = \"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/components/Maps/Map.js\",\n    _s = $RefreshSig$();\n\n/*global kakao*/\nimport React, { useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Map = () => {\n  _s();\n\n  useEffect(() => {\n    var mapContainer = document.getElementById('map'); // 지도를 표시할 div  \n\n    var mapOption = {\n      center: new kakao.maps.LatLng(36.142410487698, 128.39430145218606),\n      // 지도의 중심좌표\n      level: 4 // 지도의 확대 레벨\n\n    };\n    var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\n    // 지도를 클릭했을때 클릭한 위치에 마커를 추가하도록 지도에 클릭이벤트를 등록합니다\n\n    kakao.maps.event.addListener(map, 'click', function (mouseEvent) {\n      // 클릭한 위치에 마커를 표시합니다 \n      addMarker(mouseEvent.latLng);\n    }); // 지도에 표시된 마커 객체를 가지고 있을 배열입니다\n\n    var markers = []; // 마커 하나를 지도위에 표시합니다 \n\n    addMarker(new kakao.maps.LatLng(33.450701, 126.570667)); // 마커를 생성하고 지도위에 표시하는 함수입니다\n\n    function addMarker(position) {\n      // 마커를 생성합니다\n      var marker = new kakao.maps.Marker({\n        position: position\n      }); // 마커가 지도 위에 표시되도록 설정합니다\n\n      marker.setMap(map); // 생성된 마커를 배열에 추가합니다\n\n      markers.push(marker);\n    } // 배열에 추가된 마커들을 지도에 표시하거나 삭제하는 함수입니다\n\n\n    function setMarkers(map) {\n      for (var i = 0; i < markers.length; i++) {\n        markers[i].setMap(map);\n      }\n    } // \"마커 보이기\" 버튼을 클릭하면 호출되어 배열에 추가된 마커를 지도에 표시하는 함수입니다\n\n\n    function showMarkers() {\n      setMarkers(map);\n    } // \"마커 감추기\" 버튼을 클릭하면 호출되어 배열에 추가된 마커를 지도에서 삭제하는 함수입니다\n\n\n    function hideMarkers() {\n      setMarkers(null);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      height: \"100%\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Map, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/components/Maps/Map.js"],"names":["React","useContext","useEffect","useState","Map","mapContainer","document","getElementById","mapOption","center","kakao","maps","LatLng","level","map","event","addListener","mouseEvent","addMarker","latLng","markers","position","marker","Marker","setMap","push","setMarkers","i","length","showMarkers","hideMarkers","height"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;;;AAEA,MAAMC,GAAG,GAAG,MAAK;AAAA;;AACbF,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIG,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAnB,CADU,CACyC;;AACnD,QAAIC,SAAS,GAAG;AACZC,MAAAA,MAAM,EAAE,IAAIC,KAAK,CAACC,IAAN,CAAWC,MAAf,CAAsB,eAAtB,EAAuC,kBAAvC,CADI;AACwD;AACpEC,MAAAA,KAAK,EAAE,CAFK,CAEH;;AAFG,KAAhB;AAKA,QAAIC,GAAG,GAAG,IAAIJ,KAAK,CAACC,IAAN,CAAWP,GAAf,CAAmBC,YAAnB,EAAiCG,SAAjC,CAAV,CAPU,CAO6C;AAEvD;;AACAE,IAAAA,KAAK,CAACC,IAAN,CAAWI,KAAX,CAAiBC,WAAjB,CAA6BF,GAA7B,EAAkC,OAAlC,EAA2C,UAASG,UAAT,EAAqB;AAC5D;AACAC,MAAAA,SAAS,CAACD,UAAU,CAACE,MAAZ,CAAT;AACH,KAHD,EAVU,CAeV;;AACA,QAAIC,OAAO,GAAG,EAAd,CAhBU,CAkBV;;AACAF,IAAAA,SAAS,CAAC,IAAIR,KAAK,CAACC,IAAN,CAAWC,MAAf,CAAsB,SAAtB,EAAiC,UAAjC,CAAD,CAAT,CAnBU,CAqBV;;AACA,aAASM,SAAT,CAAmBG,QAAnB,EAA6B;AAEzB;AACA,UAAIC,MAAM,GAAG,IAAIZ,KAAK,CAACC,IAAN,CAAWY,MAAf,CAAsB;AAC/BF,QAAAA,QAAQ,EAAEA;AADqB,OAAtB,CAAb,CAHyB,CAOzB;;AACAC,MAAAA,MAAM,CAACE,MAAP,CAAcV,GAAd,EARyB,CAUzB;;AACAM,MAAAA,OAAO,CAACK,IAAR,CAAaH,MAAb;AACH,KAlCS,CAoCV;;;AACA,aAASI,UAAT,CAAoBZ,GAApB,EAAyB;AACrB,WAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,OAAO,CAACQ,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrCP,QAAAA,OAAO,CAACO,CAAD,CAAP,CAAWH,MAAX,CAAkBV,GAAlB;AACH;AACJ,KAzCS,CA2CV;;;AACA,aAASe,WAAT,GAAuB;AACnBH,MAAAA,UAAU,CAACZ,GAAD,CAAV;AACH,KA9CS,CAgDV;;;AACA,aAASgB,WAAT,GAAuB;AACnBJ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ,GApDQ,EAoDN,EApDM,CAAT;AAsDA,sBACI;AAAK,IAAA,EAAE,EAAC,KAAR;AAAc,IAAA,KAAK,EAAE;AAACK,MAAAA,MAAM,EAAE;AAAT;AAArB;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CA1DD;;GAAM3B,G;;KAAAA,G;AA4DN,eAAeA,GAAf","sourcesContent":["/*global kakao*/ \nimport React, { useContext, useEffect, useState } from 'react'\n\nconst Map = () =>{\n    useEffect(()=>{\n        var mapContainer = document.getElementById('map'); // 지도를 표시할 div  \n        var mapOption = { \n            center: new kakao.maps.LatLng(36.142410487698, 128.39430145218606), // 지도의 중심좌표\n            level: 4 // 지도의 확대 레벨\n        };\n\n        var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\n        \n        // 지도를 클릭했을때 클릭한 위치에 마커를 추가하도록 지도에 클릭이벤트를 등록합니다\n        kakao.maps.event.addListener(map, 'click', function(mouseEvent) {        \n            // 클릭한 위치에 마커를 표시합니다 \n            addMarker(mouseEvent.latLng);             \n        });\n\n        // 지도에 표시된 마커 객체를 가지고 있을 배열입니다\n        var markers = [];\n\n        // 마커 하나를 지도위에 표시합니다 \n        addMarker(new kakao.maps.LatLng(33.450701, 126.570667));\n\n        // 마커를 생성하고 지도위에 표시하는 함수입니다\n        function addMarker(position) {\n            \n            // 마커를 생성합니다\n            var marker = new kakao.maps.Marker({\n                position: position\n            });\n\n            // 마커가 지도 위에 표시되도록 설정합니다\n            marker.setMap(map);\n            \n            // 생성된 마커를 배열에 추가합니다\n            markers.push(marker);\n        }\n\n        // 배열에 추가된 마커들을 지도에 표시하거나 삭제하는 함수입니다\n        function setMarkers(map) {\n            for (var i = 0; i < markers.length; i++) {\n                markers[i].setMap(map);\n            }            \n        }\n\n        // \"마커 보이기\" 버튼을 클릭하면 호출되어 배열에 추가된 마커를 지도에 표시하는 함수입니다\n        function showMarkers() {\n            setMarkers(map)    \n        }\n\n        // \"마커 감추기\" 버튼을 클릭하면 호출되어 배열에 추가된 마커를 지도에서 삭제하는 함수입니다\n        function hideMarkers() {\n            setMarkers(null);    \n        }\n    }, []);\n\n    return (\n        <div id=\"map\" style={{height: \"100%\"}}></div> \n    );\n};\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}