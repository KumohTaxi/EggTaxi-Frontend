{"ast":null,"code":"var _jsxFileName = \"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/components/Maps/Map.js\",\n    _s = $RefreshSig$();\n\n/*global kakao*/\nimport React, { useContext, useEffect, useState } from 'react';\nimport { LatLngContext } from '../../contexts/LatLngContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Map = () => {\n  _s();\n\n  const {\n    isLatLng,\n    setIsLatLng\n  } = useContext(LatLngContext);\n  console.log(isLatLng);\n  const [LatLng, setLatLng] = useState([36.142410487698, 128.39430145218606]);\n  var map;\n  useEffect(() => {\n    var mapContainer = document.getElementById('map'),\n        // 지도를 표시할 div  \n    mapOption = {\n      center: new kakao.maps.LatLng(LatLng[0], LatLng[1]),\n      // 지도의 중심좌표\n      level: 4 // 지도의 확대 레벨\n\n    };\n    map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\n  });\n  setIsLatLng([2, 2]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      height: \"100%\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Map, \"CgYIBjqWdUsfYnpmKnFPqNY+KYQ=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/components/Maps/Map.js"],"names":["React","useContext","useEffect","useState","LatLngContext","Map","isLatLng","setIsLatLng","console","log","LatLng","setLatLng","map","mapContainer","document","getElementById","mapOption","center","kakao","maps","level","height"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,aAAT,QAA8B,8BAA9B;;;AAEA,MAAMC,GAAG,GAAG,MAAK;AAAA;;AACb,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAA0BN,UAAU,CAACG,aAAD,CAA1C;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,CAAC,eAAD,EAAkB,kBAAlB,CAAD,CAApC;AACA,MAAIS,GAAJ;AAEAV,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIW,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAnB;AAAA,QAAmD;AACnDC,IAAAA,SAAS,GAAG;AACRC,MAAAA,MAAM,EAAE,IAAIC,KAAK,CAACC,IAAN,CAAWT,MAAf,CAAsBA,MAAM,CAAC,CAAD,CAA5B,EAAiCA,MAAM,CAAC,CAAD,CAAvC,CADA;AAC6C;AACrDU,MAAAA,KAAK,EAAE,CAFC,CAEC;;AAFD,KADZ;AAMAR,IAAAA,GAAG,GAAG,IAAIM,KAAK,CAACC,IAAN,CAAWd,GAAf,CAAmBQ,YAAnB,EAAiCG,SAAjC,CAAN,CAPU,CAOyC;AAGtD,GAVQ,CAAT;AAYAT,EAAAA,WAAW,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,CAAX;AAMA,sBACI;AAAK,IAAA,EAAE,EAAC,KAAR;AAAc,IAAA,KAAK,EAAE;AAACc,MAAAA,MAAM,EAAE;AAAT;AAArB;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CA5BD;;GAAMhB,G;;KAAAA,G;AA8BN,eAAeA,GAAf","sourcesContent":["/*global kakao*/ \nimport React, { useContext, useEffect, useState } from 'react'\nimport { LatLngContext } from '../../contexts/LatLngContext';\n\nconst Map = () =>{\n    const {isLatLng, setIsLatLng} = useContext(LatLngContext);\n    console.log(isLatLng)\n\n    const [LatLng, setLatLng] = useState([36.142410487698, 128.39430145218606]);\n    var map;\n\n    useEffect(()=>{\n        var mapContainer = document.getElementById('map'), // 지도를 표시할 div  \n        mapOption = { \n            center: new kakao.maps.LatLng(LatLng[0], LatLng[1]), // 지도의 중심좌표\n            level: 4 // 지도의 확대 레벨\n        };\n\n        map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\n\n        \n    });\n\n    setIsLatLng([2, 2]);\n\n    \n    \n\n\n    return (\n        <div id=\"map\" style={{height: \"100%\"}}></div> \n    )\n};\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}