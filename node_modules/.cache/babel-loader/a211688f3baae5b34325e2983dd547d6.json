{"ast":null,"code":"var _jsxFileName = \"/Users/guhyeonwoo/Git/Projects/Taxi-Project/taxifront/src/Location.js\",\n    _s = $RefreshSig$();\n\n/*global kakao*/\nimport React, { useState, useEffect } from 'react';\nimport { propTypes } from 'react-bootstrap/esm/Image';\nimport './Location.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Location = props => {\n  _s();\n\n  const [Lat, setLat] = useState(36.14243941272335);\n  const [Lng, setLng] = useState(128.39433251647304);\n  useEffect(() => {\n    var mapContainer = document.getElementById('map'),\n        // 지도를 표시할 div \n    mapOption = {\n      center: new kakao.maps.LatLng(Lat, Lng) // 지도의 중심좌표\n\n    }; // 지도를 표시할 div와  지도 옵션으로  지도를 생성합니다\n\n    var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 클릭했을때 클릭한 위치에 마커를 추가하도록 지도에 클릭이벤트를 등록합니다\n\n    kakao.maps.event.addListener(map, 'click', function (mouseEvent) {\n      setLat(mouseEvent.latLng.getLat());\n      setLng(mouseEvent.latLng.getLng()); // 클릭한 위치에 마커를 표시합니다 \n\n      addMarker(mouseEvent.latLng);\n      console.log(mouseEvent.latLng.getLat(), mouseEvent.latLng.getLng());\n    }); // 지도에 표시된 마커 객체를 가지고 있을 배열입니다\n\n    var markers = []; // 마커 하나를 지도위에 표시합니다 \n\n    addMarker(new kakao.maps.LatLng(Lat, Lng)); // 마커를 생성하고 지도위에 표시하는 함수입니다\n\n    function addMarker(position) {\n      //전의 마크를 삭제합니다\n      setMarkers(null); // 마커를 생성합니다\n\n      var marker = new kakao.maps.Marker({\n        position: position\n      }); // 마커가 지도 위에 표시되도록 설정합니다\n\n      marker.setMap(map); // 생성된 마커를 배열에 추가합니다\n\n      markers.push(marker);\n    } // 배열에 추가된 마커들을 지도에 표시하거나 삭제하는 함수입니다\n\n\n    function setMarkers(map) {\n      for (var i = 0; i < markers.length; i++) {\n        markers[i].setMap(map);\n      }\n    }\n  }, [Lat, Lng]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Location, \"MpndgfABIRBCoCy+etZpcnu3XKk=\");\n\n_c = Location;\nexport default Location;\n\nvar _c;\n\n$RefreshReg$(_c, \"Location\");","map":{"version":3,"sources":["/Users/guhyeonwoo/Git/Projects/Taxi-Project/taxifront/src/Location.js"],"names":["React","useState","useEffect","propTypes","Location","props","Lat","setLat","Lng","setLng","mapContainer","document","getElementById","mapOption","center","kakao","maps","LatLng","map","Map","event","addListener","mouseEvent","latLng","getLat","getLng","addMarker","console","log","markers","position","setMarkers","marker","Marker","setMap","push","i","length"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,CAAC,iBAAD,CAA9B;AACA,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,kBAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAI;AAEV,QAAIQ,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAnB;AAAA,QAAmD;AAC/CC,IAAAA,SAAS,GAAG;AACRC,MAAAA,MAAM,EAAE,IAAIC,KAAK,CAACC,IAAN,CAAWC,MAAf,CAAsBX,GAAtB,EAA2BE,GAA3B,CADA,CACiC;;AADjC,KADhB,CAFU,CAQV;;AACA,QAAIU,GAAG,GAAG,IAAIH,KAAK,CAACC,IAAN,CAAWG,GAAf,CAAmBT,YAAnB,EAAiCG,SAAjC,CAAV,CATU,CAWV;;AACAE,IAAAA,KAAK,CAACC,IAAN,CAAWI,KAAX,CAAiBC,WAAjB,CAA6BH,GAA7B,EAAkC,OAAlC,EAA2C,UAASI,UAAT,EAAqB;AAE5Df,MAAAA,MAAM,CAACe,UAAU,CAACC,MAAX,CAAkBC,MAAlB,EAAD,CAAN;AACAf,MAAAA,MAAM,CAACa,UAAU,CAACC,MAAX,CAAkBE,MAAlB,EAAD,CAAN,CAH4D,CAK5D;;AACAC,MAAAA,SAAS,CAACJ,UAAU,CAACC,MAAZ,CAAT;AAEAI,MAAAA,OAAO,CAACC,GAAR,CAAYN,UAAU,CAACC,MAAX,CAAkBC,MAAlB,EAAZ,EAAwCF,UAAU,CAACC,MAAX,CAAkBE,MAAlB,EAAxC;AACH,KATD,EAZU,CAuBV;;AACA,QAAII,OAAO,GAAG,EAAd,CAxBU,CA0BV;;AACAH,IAAAA,SAAS,CAAC,IAAIX,KAAK,CAACC,IAAN,CAAWC,MAAf,CAAsBX,GAAtB,EAA2BE,GAA3B,CAAD,CAAT,CA3BU,CA6BV;;AACA,aAASkB,SAAT,CAAmBI,QAAnB,EAA6B;AAEzB;AACAC,MAAAA,UAAU,CAAC,IAAD,CAAV,CAHyB,CAKzB;;AACA,UAAIC,MAAM,GAAG,IAAIjB,KAAK,CAACC,IAAN,CAAWiB,MAAf,CAAsB;AAC/BH,QAAAA,QAAQ,EAAEA;AADqB,OAAtB,CAAb,CANyB,CAUzB;;AACAE,MAAAA,MAAM,CAACE,MAAP,CAAchB,GAAd,EAXyB,CAazB;;AACAW,MAAAA,OAAO,CAACM,IAAR,CAAaH,MAAb;AACH,KA7CS,CA+CV;;;AACA,aAASD,UAAT,CAAoBb,GAApB,EAAyB;AACrB,WAAK,IAAIkB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,OAAO,CAACQ,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrCP,QAAAA,OAAO,CAACO,CAAD,CAAP,CAAWF,MAAX,CAAkBhB,GAAlB;AACH;AACJ;AACJ,GArDQ,EAqDN,CAACZ,GAAD,EAAME,GAAN,CArDM,CAAT;AAwDA,sBACI;AAAK,IAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CA/DD;;GAAMJ,Q;;KAAAA,Q;AAiEN,eAAeA,QAAf","sourcesContent":["/*global kakao*/ \nimport React, {useState, useEffect } from 'react'\nimport { propTypes } from 'react-bootstrap/esm/Image';\nimport './Location.css';\n\nconst Location = (props) => {\n    const [Lat, setLat] = useState(36.14243941272335);\n    const [Lng, setLng] = useState(128.39433251647304);\n\n    useEffect(()=>{\n\n        var mapContainer = document.getElementById('map'), // 지도를 표시할 div \n            mapOption = { \n                center: new kakao.maps.LatLng(Lat, Lng), // 지도의 중심좌표\n                \n            };\n\n        // 지도를 표시할 div와  지도 옵션으로  지도를 생성합니다\n        var map = new kakao.maps.Map(mapContainer, mapOption); \n\n        // 지도를 클릭했을때 클릭한 위치에 마커를 추가하도록 지도에 클릭이벤트를 등록합니다\n        kakao.maps.event.addListener(map, 'click', function(mouseEvent) {     \n            \n            setLat(mouseEvent.latLng.getLat());\n            setLng(mouseEvent.latLng.getLng());\n\n            // 클릭한 위치에 마커를 표시합니다 \n            addMarker(mouseEvent.latLng); \n\n            console.log(mouseEvent.latLng.getLat(), mouseEvent.latLng.getLng());\n        });\n\n        // 지도에 표시된 마커 객체를 가지고 있을 배열입니다\n        var markers = [];\n\n        // 마커 하나를 지도위에 표시합니다 \n        addMarker(new kakao.maps.LatLng(Lat, Lng));\n\n        // 마커를 생성하고 지도위에 표시하는 함수입니다\n        function addMarker(position) {\n            \n            //전의 마크를 삭제합니다\n            setMarkers(null); \n\n            // 마커를 생성합니다\n            var marker = new kakao.maps.Marker({\n                position: position\n            });\n\n            // 마커가 지도 위에 표시되도록 설정합니다\n            marker.setMap(map);\n            \n            // 생성된 마커를 배열에 추가합니다\n            markers.push(marker);    \n        }\n\n        // 배열에 추가된 마커들을 지도에 표시하거나 삭제하는 함수입니다\n        function setMarkers(map) {\n            for (var i = 0; i < markers.length; i++) {\n                markers[i].setMap(map);\n            }  \n        }\n    }, [Lat, Lng])\n\n\n    return (\n        <div id=\"map\"></div>\n    )\n};\n\nexport default Location;"]},"metadata":{},"sourceType":"module"}