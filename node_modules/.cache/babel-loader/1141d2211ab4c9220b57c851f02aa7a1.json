{"ast":null,"code":"var _jsxFileName = \"/Users/guhyeonwoo/Git/Projects/Taxi-Project/taxifront/src/Location.js\",\n    _s2 = $RefreshSig$();\n\n/*global kakao*/\nimport React, { useState, useEffect, forwardRef, useImperativeHandle } from 'react';\nimport { propTypes } from 'react-bootstrap/esm/Image';\nimport './Location.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Location = /*#__PURE__*/_s2( /*#__PURE__*/forwardRef(_c = _s2((props, ref) => {\n  var _s = $RefreshSig$();\n\n  _s2();\n\n  _s(useEffect(_s(() => {\n    _s();\n\n    const [Lat, setLat] = useState(0);\n    const [Lng, setLng] = useState(0);\n    var mapContainer = document.getElementById('map'),\n        // 지도를 표시할 div \n    mapOption = {\n      center: new kakao.maps.LatLng(36.14243941272335, 128.39433251647304),\n      // 지도의 중심좌표\n      level: 3 // 지도의 확대 레벨\n\n    }; // 지도를 표시할 div와  지도 옵션으로  지도를 생성합니다\n\n    var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 클릭했을때 클릭한 위치에 마커를 추가하도록 지도에 클릭이벤트를 등록합니다\n\n    kakao.maps.event.addListener(map, 'click', function (mouseEvent) {\n      // 클릭한 위치에 마커를 표시합니다 \n      addMarker(mouseEvent.latLng.getLat());\n    }); // 지도에 표시된 마커 객체를 가지고 있을 배열입니다\n\n    var markers = []; // 마커 하나를 지도위에 표시합니다 \n\n    addMarker(new kakao.maps.LatLng(36.14243941272335, 128.39433251647304)); // 마커를 생성하고 지도위에 표시하는 함수입니다\n\n    function addMarker(position) {\n      //전의 마크를 삭제합니다\n      setMarkers(null); // 마커를 생성합니다\n\n      var marker = new kakao.maps.Marker({\n        position: position\n      }); // 마커가 지도 위에 표시되도록 설정합니다\n\n      marker.setMap(map); // 생성된 마커를 배열에 추가합니다\n\n      markers.push(marker);\n    } // 배열에 추가된 마커들을 지도에 표시하거나 삭제하는 함수입니다\n\n\n    function setMarkers(map) {\n      for (var i = 0; i < markers.length; i++) {\n        markers[i].setMap(map);\n      }\n    }\n\n    useImperativeHandle(ref, () => ({}));\n  }, \"Ao+DX0p8UdcuLnqtzbIvuMNFysg=\"), []), \"Ao+DX0p8UdcuLnqtzbIvuMNFysg=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}, \"OD7bBpZva5O2jO+Puf00hKivP7c=\")), \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c2 = Location;\nexport default Location;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Location$forwardRef\");\n$RefreshReg$(_c2, \"Location\");","map":{"version":3,"sources":["/Users/guhyeonwoo/Git/Projects/Taxi-Project/taxifront/src/Location.js"],"names":["React","useState","useEffect","forwardRef","useImperativeHandle","propTypes","Location","props","ref","Lat","setLat","Lng","setLng","mapContainer","document","getElementById","mapOption","center","kakao","maps","LatLng","level","map","Map","event","addListener","mouseEvent","addMarker","latLng","getLat","markers","position","setMarkers","marker","Marker","setMap","push","i","length"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,EAAgDC,mBAAhD,QAA2E,OAA3E;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,kCAAGH,UAAU,UAAC,CAACI,KAAD,EAAQC,GAAR,KAAgB;AAAA;;AAAA;;AAExC,KAAAN,SAAS,IAAC,MAAI;AAAA;;AACV,UAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,CAAD,CAA9B;AACA,UAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,CAAD,CAA9B;AAEA,QAAIY,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAnB;AAAA,QAAmD;AAC/CC,IAAAA,SAAS,GAAG;AACRC,MAAAA,MAAM,EAAE,IAAIC,KAAK,CAACC,IAAN,CAAWC,MAAf,CAAsB,iBAAtB,EAAyC,kBAAzC,CADA;AAC8D;AACtEC,MAAAA,KAAK,EAAE,CAFC,CAEC;;AAFD,KADhB,CAJU,CAUV;;AACA,QAAIC,GAAG,GAAG,IAAIJ,KAAK,CAACC,IAAN,CAAWI,GAAf,CAAmBV,YAAnB,EAAiCG,SAAjC,CAAV,CAXU,CAaV;;AACAE,IAAAA,KAAK,CAACC,IAAN,CAAWK,KAAX,CAAiBC,WAAjB,CAA6BH,GAA7B,EAAkC,OAAlC,EAA2C,UAASI,UAAT,EAAqB;AAC5D;AACAC,MAAAA,SAAS,CAACD,UAAU,CAACE,MAAX,CAAkBC,MAAlB,EAAD,CAAT;AACH,KAHD,EAdU,CAmBV;;AACA,QAAIC,OAAO,GAAG,EAAd,CApBU,CAsBV;;AACAH,IAAAA,SAAS,CAAC,IAAIT,KAAK,CAACC,IAAN,CAAWC,MAAf,CAAsB,iBAAtB,EAAyC,kBAAzC,CAAD,CAAT,CAvBU,CAyBV;;AACA,aAASO,SAAT,CAAmBI,QAAnB,EAA6B;AAEzB;AACAC,MAAAA,UAAU,CAAC,IAAD,CAAV,CAHyB,CAKzB;;AACA,UAAIC,MAAM,GAAG,IAAIf,KAAK,CAACC,IAAN,CAAWe,MAAf,CAAsB;AAC/BH,QAAAA,QAAQ,EAAEA;AADqB,OAAtB,CAAb,CANyB,CAUzB;;AACAE,MAAAA,MAAM,CAACE,MAAP,CAAcb,GAAd,EAXyB,CAazB;;AACAQ,MAAAA,OAAO,CAACM,IAAR,CAAaH,MAAb;AACH,KAzCS,CA2CV;;;AACA,aAASD,UAAT,CAAoBV,GAApB,EAAyB;AACrB,WAAK,IAAIe,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,OAAO,CAACQ,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrCP,QAAAA,OAAO,CAACO,CAAD,CAAP,CAAWF,MAAX,CAAkBb,GAAlB;AACH;AACJ;;AAEDlB,IAAAA,mBAAmB,CAACI,GAAD,EAAM,OAAO,EAAP,CAAN,CAAnB;AAIH,GAtDQ,mCAsDN,EAtDM,CAAT;;AAyDA,sBACI;AAAK,IAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CA9D0B,kCAAb,iCAAd;;MAAMF,Q;AAgEN,eAAeA,QAAf","sourcesContent":["/*global kakao*/ \nimport React, {useState, useEffect, forwardRef, useImperativeHandle } from 'react'\nimport { propTypes } from 'react-bootstrap/esm/Image';\nimport './Location.css';\n\nconst Location = forwardRef((props, ref) => {\n    \n    useEffect(()=>{\n        const [Lat, setLat] = useState(0);\n        const [Lng, setLng] = useState(0);\n\n        var mapContainer = document.getElementById('map'), // 지도를 표시할 div \n            mapOption = { \n                center: new kakao.maps.LatLng(36.14243941272335, 128.39433251647304), // 지도의 중심좌표\n                level: 3 // 지도의 확대 레벨\n            };\n\n        // 지도를 표시할 div와  지도 옵션으로  지도를 생성합니다\n        var map = new kakao.maps.Map(mapContainer, mapOption); \n\n        // 지도를 클릭했을때 클릭한 위치에 마커를 추가하도록 지도에 클릭이벤트를 등록합니다\n        kakao.maps.event.addListener(map, 'click', function(mouseEvent) {        \n            // 클릭한 위치에 마커를 표시합니다 \n            addMarker(mouseEvent.latLng.getLat());\n        });\n\n        // 지도에 표시된 마커 객체를 가지고 있을 배열입니다\n        var markers = [];\n\n        // 마커 하나를 지도위에 표시합니다 \n        addMarker(new kakao.maps.LatLng(36.14243941272335, 128.39433251647304));\n\n        // 마커를 생성하고 지도위에 표시하는 함수입니다\n        function addMarker(position) {\n            \n            //전의 마크를 삭제합니다\n            setMarkers(null); \n\n            // 마커를 생성합니다\n            var marker = new kakao.maps.Marker({\n                position: position\n            });\n\n            // 마커가 지도 위에 표시되도록 설정합니다\n            marker.setMap(map);\n            \n            // 생성된 마커를 배열에 추가합니다\n            markers.push(marker);\n        }\n\n        // 배열에 추가된 마커들을 지도에 표시하거나 삭제하는 함수입니다\n        function setMarkers(map) {\n            for (var i = 0; i < markers.length; i++) {\n                markers[i].setMap(map);\n            }  \n        }\n\n        useImperativeHandle(ref, () => ({\n\n        }))\n\n    }, [])\n\n\n    return (\n        <div id=\"map\"></div>\n    )\n})\n\nexport default Location;"]},"metadata":{},"sourceType":"module"}