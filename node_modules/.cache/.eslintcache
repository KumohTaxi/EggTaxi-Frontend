[{"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/index.js":"1","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/App.js":"2","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/reportWebVitals.js":"3","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/pages/MainPage.js":"4","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/components/Footers/Footer.js":"5","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/components/Bars/Navbars.js":"6","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/components/Footers/minFooter.js":"7","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/components/Maps/Map.js":"8","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/pages/SettingPage.js":"9","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/pages/LoginPage.js":"10","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/pages/SignUpPage.js":"11","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/forms/LoginForm.js":"12","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/forms/SignUpForm.js":"13","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/modals/MakeModal.js":"14","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/modals/MyModal.js":"15","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/modals/CheckModal.js":"16"},{"size":592,"mtime":1648039994969,"results":"17","hashOfConfig":"18"},{"size":764,"mtime":1648441206948,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1647772922781,"results":"20","hashOfConfig":"18"},{"size":831,"mtime":1648127787066,"results":"21","hashOfConfig":"18"},{"size":620,"mtime":1648129317941,"results":"22","hashOfConfig":"18"},{"size":1334,"mtime":1648441151804,"results":"23","hashOfConfig":"18"},{"size":377,"mtime":1648042462339,"results":"24","hashOfConfig":"18"},{"size":2370,"mtime":1648021028582,"results":"25","hashOfConfig":"18"},{"size":185,"mtime":1648296741210,"results":"26","hashOfConfig":"18"},{"size":999,"mtime":1648431466997,"results":"27","hashOfConfig":"18"},{"size":1023,"mtime":1648301048452,"results":"28","hashOfConfig":"18"},{"size":1186,"mtime":1648303818745,"results":"29","hashOfConfig":"18"},{"size":1534,"mtime":1648304152497,"results":"30","hashOfConfig":"18"},{"size":6781,"mtime":1648465185249,"results":"31","hashOfConfig":"18"},{"size":737,"mtime":1648441080508,"results":"32","hashOfConfig":"18"},{"size":1550,"mtime":1648358321942,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"1oimsx4",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"65"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/index.js",[],[],["91","92"],"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/App.js",[],[],"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/reportWebVitals.js",[],[],"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/pages/MainPage.js",[],[],["93","94"],"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/components/Footers/Footer.js",[],[],"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/components/Bars/Navbars.js",["95"],[],"import {Navbar, Nav, Container} from 'react-bootstrap';\nimport './Navbars.css';\nimport React from 'react'\nimport CheckModal from '../../modals/CheckModal';\nimport MyModal from '../../modals/MyModal';\n\nconst Navbars=()=>{\n    const [checkShow, setcheckShow] = React.useState(false);\n    const [MyShow, setMyShow] = React.useState(false);\n\n    return(\n        <div>\n            <Navbar bg=\"dark\" variant=\"dark\" style={{fontWeight: \"bold\"}}>\n                <Container id='container'>\n                    <Navbar.Brand>\n                        <img className='Logo' src=\"imgs/Taxi-Logo.png\"\n                        style={{width: \"60px\", height: \"60px\"}}/>\n                    </Navbar.Brand>\n                    <Nav className=\"me-auto\">\n                        <Nav.Link onClick={() => setcheckShow(true)}>Make</Nav.Link>\n                        <Nav.Link onClick={() => setMyShow(true)}>My</Nav.Link>\n                        <Nav.Link href=\"/Setting\">Setting</Nav.Link>\n                    </Nav>\n                </Container>\n            </Navbar>\n\n            <CheckModal\n                show={checkShow}\n                onHide={() => setcheckShow(false)}\n            />\n\n            <MyModal\n                show={MyShow}\n                onHide={() => setMyShow(false)}\n            />\n        </div>\n    )\n}\n\nexport default Navbars;",["96","97"],"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/components/Footers/minFooter.js",[],[],"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/components/Maps/Map.js",[],[],"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/pages/SettingPage.js",[],[],["98","99"],"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/pages/LoginPage.js",["100"],[],"import Footer from \"../components/Footers/Footer\";\nimport minFooter from \"../components/Footers/minFooter\";\nimport { useMediaQuery } from \"react-responsive\"\nimport './LoginPage.css';\nimport LoginForm from \"../forms/LoginForm\";\n\nconst LoginPage=()=>{\n    const isPc = useMediaQuery({\n        query : \"(min-width:351px)\"\n    });\n    const isMobile = useMediaQuery({\n    query : \"(max-width:350px)\"\n    });\n\n    return(\n        <div id='Login'>\n            <div id=\"loginmain\">\n                <div className=\"logintop\">\n                    <img className='loginLogo' src=\"imgs/Taxi-Logo.png\"/>\n                </div>\n                <div className=\"loginmiddle\">\n                    <div className=\"LoginForm\">\n                        {LoginForm()}\n                    </div>\n                </div>\n            </div>\n            <div className='Footer'>\n                {isPc && Footer()}\n                {isMobile && minFooter()}\n            </div>\n        </div>\n    );\n}\n\nexport default LoginPage;","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/pages/SignUpPage.js",["101"],[],"import './SignUpPage.css';\nimport Footer from \"../components/Footers/Footer\";\nimport minFooter from \"../components/Footers/minFooter\";\nimport { useMediaQuery } from \"react-responsive\";\nimport SignUpForm from '../forms/SignUpForm';\n\nconst SignUpPage = () => {\n    const isPc = useMediaQuery({\n        query : \"(min-width:351px)\"\n    });\n    const isMobile = useMediaQuery({\n    query : \"(max-width:350px)\"\n    });\n\n    return(\n        <div id=\"signup\">\n            <div className='signupmain'>\n                <div className='signuptop'>\n                    <img className='signupLogo' src=\"imgs/Taxi-Logo.png\"/>\n                </div>\n                <div className='signupmiddle'>\n                    <div className='SignUpForm'>\n                        {SignUpForm()}\n                    </div>\n                </div>\n            </div>\n            <div className='Footer'>\n                {isPc && Footer()}\n                {isMobile && minFooter()}\n            </div>\n        </div>\n    );\n}\n\nexport default SignUpPage;","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/forms/LoginForm.js",[],[],"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/forms/SignUpForm.js",[],[],"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/modals/MakeModal.js",["102","103","104","105","106"],[],"import {Modal, Button, Form, Badge} from 'react-bootstrap';\nimport './MakeModal.css';\nimport React, { useState } from 'react';\nimport { getValue } from '@testing-library/user-event/dist/utils';\nimport { toHaveFormValues, toHaveValue } from '@testing-library/jest-dom/dist/matchers';\n\nconst MakeModal=(props)=>{\n    var todayDate = new Date();\n    const [today, settoday] = useState(todayDate);\n    const [checkHidden, setcheckHidden] = useState(false);\n\n    const [Year, setYear] = useState(today.getFullYear());\n    const [Month, setMonth] = useState(today.getMonth()+1);\n    const [Day, setDay] = useState(today.getDate());\n    const [Hour, setHour] = useState(today.getHours());\n    const [Minute, setMinute] = useState((parseInt(today.getMinutes()/10+1)*10).toString());\n    const [Destination, setDestination] = useState(\"\");\n    const [Auth, setAuth] = useState(\"NO\");\n    const [Gender, setGender] = useState(\"\");\n\n    const goToday=()=>{\n        settoday(todayDate);\n        setYear(today.getFullYear());\n        setMonth(today.getMonth()+1);\n        setDay(today.getDate());\n    }\n\n    const goTomorrow=()=>{\n        var tomorrow = new Date(todayDate.setDate(todayDate.getDate() + 1));\n        settoday(tomorrow);\n        setYear(today.getFullYear());\n        setMonth(today.getMonth()+1);\n        setDay(today.getDate());\n    };\n\n    const CheckANY=()=>{\n        setGender(\"ANY\")\n    };\n    const CheckMALE=()=>{\n        setGender(\"MALE\")\n    };\n    const CheckFEMALE=()=>{\n        setGender(\"FEMALE\")\n    };\n\n    const FormCheck=()=>{\n        return(\n            <div className='genderchoice'>\n                <p className='genderP'>\n                    성별 여부\n                </p>\n                <Form className='formchecks'>\n                    {['radio'].map((type) => (\n                        <div key={`inline-${type}`} className=\"mb-3\">\n                        <Form.Check\n                            inline\n                            onClick={CheckANY}\n                            label=\"상관없음\"\n                            name=\"group1\"\n                            type={type}\n                            id={`inline-${type}-1`}\n                        />\n                        <Form.Check\n                            inline\n                            onClick={CheckMALE}\n                            label=\"남자만\"\n                            name=\"group1\"\n                            type={type}\n                            id={`inline-${type}-2`}\n                        />\n                        <Form.Check\n                            inline\n                            onClick={CheckFEMALE}\n                            label=\"여자만\"\n                            name='group1'\n                            type={type}\n                            id={`inline-${type}-3`}\n                        />\n                        </div>\n                    ))}\n                </Form>\n            </div>\n        );\n    };\n\n    return(\n        <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        >\n            <Modal.Header style={{backgroundColor: \"#282828\"}}>\n                <Modal.Title className='MakeTitle' id=\"contained-modal-title-vcenter\">\n                Make Room Modal\n                </Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n                <div className='MakeDate'>\n                    <div className='subtitle'>\n                        날짜\n                    </div>\n                    <div className=\"vr\" />\n                    <div className='subcontent'>\n                        <Badge id='todaydate' bg=\"light\" text=\"dark\">{Year}년 {Month}월 {Day}일</Badge>\n                        <div className='buttonDate'>\n                            <Button variant=\"outline-dark\" className='buttonDateLeft' onClick={goToday}>오늘</Button>\n                            <Button variant=\"outline-dark\" className='buttonDateRight' onClick={goTomorrow}>내일</Button>\n                        </div>\n                    </div>\n                </div>\n                <div className='MakeTime'>\n                    <div className='subtitle'>\n                        시간\n                    </div>\n                    <div className=\"vr\" />\n                    <div className='subcontent'>\n                        <div className='choiceHour'>\n                            <Form.Control className='inputHour' placeholder={Hour} onChange={(event)=> setHour(event.target.value)}/>\n                            <Badge className='timeP' bg='light' text='dark'>시</Badge>\n                        </div>\n                        <div className='choiceMinute'>\n                            <Form.Control className='inputMinute' placeholder={Minute} onChange={(event)=> setMinute(event.target.value)}/>\n                            <Badge className='timeP' bg='light' text='dark'>분</Badge>\n                        </div>\n                    </div>\n                </div>\n                <div className='MakeDestination'>\n                    <div className='subtitle'>\n                        목적지\n                    </div>\n                    <div className=\"vr\" />\n                    <div className='subcontent'> \n                        <Form.Control className='inputDestination' placeholder=\"EX) 구미역 후문\" onChange={(event)=> setDestination(event.target.value)}/>\n                    </div>\n                </div>\n                <div className='MakeOther'>\n                    <div className='subtitle' style={{whiteSpace: \"pre-wrap\"}}>\n                        참가자{\"\\n\"}설정\n                    </div>\n                    <div className=\"vr\" />\n                    <div className='otherContent'>\n                        <div className='univSwitch'>\n                            <Form.Check \n                                type=\"switch\"\n                                id=\"custom-switch\"\n                                label=\"학교인증 여부\"\n                                onChange={()=>{\n                                    setcheckHidden(!checkHidden);\n                                    Auth === \"YES\" ? setAuth(\"NO\") : setAuth(\"YES\");\n                                }}\n                            />\n                        </div>\n                        {checkHidden && <FormCheck />}\n                    </div>               \n                </div>\n            </Modal.Body>\n\n            <Modal.Footer style={{backgroundColor: \"#FFFCEE\"}}>\n                <Button className='MakeButtonLeft' onClick={props.onHide}>Cancel</Button>\n                <Button className='MakeButtonRight' onClick={props.onHide}>Make</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\nexport default MakeModal;","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/modals/MyModal.js",[],[],"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/modals/CheckModal.js",[],[],["107","108"],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"109","replacedBy":"113"},{"ruleId":"111","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":16,"column":25,"nodeType":"117","endLine":17,"endColumn":66},{"ruleId":"109","replacedBy":"118"},{"ruleId":"111","replacedBy":"119"},{"ruleId":"109","replacedBy":"120"},{"ruleId":"111","replacedBy":"121"},{"ruleId":"115","severity":1,"message":"116","line":19,"column":21,"nodeType":"117","endLine":19,"endColumn":74},{"ruleId":"115","severity":1,"message":"116","line":19,"column":21,"nodeType":"117","endLine":19,"endColumn":75},{"ruleId":"122","severity":1,"message":"123","line":4,"column":10,"nodeType":"124","messageId":"125","endLine":4,"endColumn":18},{"ruleId":"122","severity":1,"message":"126","line":5,"column":10,"nodeType":"124","messageId":"125","endLine":5,"endColumn":26},{"ruleId":"122","severity":1,"message":"127","line":5,"column":28,"nodeType":"124","messageId":"125","endLine":5,"endColumn":39},{"ruleId":"122","severity":1,"message":"128","line":17,"column":12,"nodeType":"124","messageId":"125","endLine":17,"endColumn":23},{"ruleId":"122","severity":1,"message":"129","line":19,"column":12,"nodeType":"124","messageId":"125","endLine":19,"endColumn":18},{"ruleId":"109","replacedBy":"130"},{"ruleId":"111","replacedBy":"131"},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],["132"],["133"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["132"],["133"],["132"],["133"],"no-unused-vars","'getValue' is defined but never used.","Identifier","unusedVar","'toHaveFormValues' is defined but never used.","'toHaveValue' is defined but never used.","'Destination' is assigned a value but never used.","'Gender' is assigned a value but never used.",["132"],["133"],"no-global-assign","no-unsafe-negation"]