[{"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/index.js":"1","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/App.js":"2","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/reportWebVitals.js":"3","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/pages/MainPage.js":"4","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/components/Footers/Footer.js":"5","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/components/Bars/Navbars.js":"6","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/components/Footers/minFooter.js":"7","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/components/Maps/Map.js":"8","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/pages/LoginPage.js":"9","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/pages/SignUpPage.js":"10","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/forms/LoginForm.js":"11","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/forms/SignUpForm.js":"12","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/modals/MakeModal.js":"13","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/modals/MyModal.js":"14","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/modals/CheckModal.js":"15"},{"size":592,"mtime":1648039994969,"results":"16","hashOfConfig":"17"},{"size":632,"mtime":1648616536098,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1647772922781,"results":"19","hashOfConfig":"17"},{"size":831,"mtime":1648127787066,"results":"20","hashOfConfig":"17"},{"size":620,"mtime":1648129317941,"results":"21","hashOfConfig":"17"},{"size":1265,"mtime":1648616508736,"results":"22","hashOfConfig":"17"},{"size":377,"mtime":1648042462339,"results":"23","hashOfConfig":"17"},{"size":2557,"mtime":1648472095060,"results":"24","hashOfConfig":"17"},{"size":999,"mtime":1648431466997,"results":"25","hashOfConfig":"17"},{"size":1023,"mtime":1648301048452,"results":"26","hashOfConfig":"17"},{"size":1186,"mtime":1648303818745,"results":"27","hashOfConfig":"17"},{"size":1534,"mtime":1648304152497,"results":"28","hashOfConfig":"17"},{"size":6918,"mtime":1648546505506,"results":"29","hashOfConfig":"17"},{"size":737,"mtime":1648441080508,"results":"30","hashOfConfig":"17"},{"size":1550,"mtime":1648358321942,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1oimsx4",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/index.js",[],[],["87","88"],"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/App.js",[],[],"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/reportWebVitals.js",[],[],"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/pages/MainPage.js",[],[],["89","90"],"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/components/Footers/Footer.js",[],[],"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/components/Bars/Navbars.js",["91"],[],"import {Navbar, Nav, Container} from 'react-bootstrap';\nimport './Navbars.css';\nimport React from 'react'\nimport CheckModal from '../../modals/CheckModal';\nimport MyModal from '../../modals/MyModal';\n\nconst Navbars=()=>{\n    const [checkShow, setcheckShow] = React.useState(false);\n    const [MyShow, setMyShow] = React.useState(false);\n\n    return(\n        <div>\n            <Navbar bg=\"dark\" variant=\"dark\" style={{fontWeight: \"bold\"}}>\n                <Container id='container'>\n                    <Navbar.Brand>\n                        <img className='Logo' src=\"imgs/Taxi-Logo.png\"\n                        style={{width: \"60px\", height: \"60px\"}}/>\n                    </Navbar.Brand>\n                    <Nav className=\"me-auto\">\n                        <Nav.Link onClick={() => setcheckShow(true)}>Make</Nav.Link>\n                        <Nav.Link onClick={() => setMyShow(true)}>My</Nav.Link>\n                    </Nav>\n                </Container>\n            </Navbar>\n\n            <CheckModal\n                show={checkShow}\n                onHide={() => setcheckShow(false)}\n            />\n\n            <MyModal\n                show={MyShow}\n                onHide={() => setMyShow(false)}\n            />\n        </div>\n    )\n}\n\nexport default Navbars;",["92","93"],"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/components/Footers/minFooter.js",[],[],"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/components/Maps/Map.js",[],[],"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/pages/LoginPage.js",["94"],[],"import Footer from \"../components/Footers/Footer\";\nimport minFooter from \"../components/Footers/minFooter\";\nimport { useMediaQuery } from \"react-responsive\"\nimport './LoginPage.css';\nimport LoginForm from \"../forms/LoginForm\";\n\nconst LoginPage=()=>{\n    const isPc = useMediaQuery({\n        query : \"(min-width:351px)\"\n    });\n    const isMobile = useMediaQuery({\n    query : \"(max-width:350px)\"\n    });\n\n    return(\n        <div id='Login'>\n            <div id=\"loginmain\">\n                <div className=\"logintop\">\n                    <img className='loginLogo' src=\"imgs/Taxi-Logo.png\"/>\n                </div>\n                <div className=\"loginmiddle\">\n                    <div className=\"LoginForm\">\n                        {LoginForm()}\n                    </div>\n                </div>\n            </div>\n            <div className='Footer'>\n                {isPc && Footer()}\n                {isMobile && minFooter()}\n            </div>\n        </div>\n    );\n}\n\nexport default LoginPage;","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/pages/SignUpPage.js",["95"],[],"import './SignUpPage.css';\nimport Footer from \"../components/Footers/Footer\";\nimport minFooter from \"../components/Footers/minFooter\";\nimport { useMediaQuery } from \"react-responsive\";\nimport SignUpForm from '../forms/SignUpForm';\n\nconst SignUpPage = () => {\n    const isPc = useMediaQuery({\n        query : \"(min-width:351px)\"\n    });\n    const isMobile = useMediaQuery({\n    query : \"(max-width:350px)\"\n    });\n\n    return(\n        <div id=\"signup\">\n            <div className='signupmain'>\n                <div className='signuptop'>\n                    <img className='signupLogo' src=\"imgs/Taxi-Logo.png\"/>\n                </div>\n                <div className='signupmiddle'>\n                    <div className='SignUpForm'>\n                        {SignUpForm()}\n                    </div>\n                </div>\n            </div>\n            <div className='Footer'>\n                {isPc && Footer()}\n                {isMobile && minFooter()}\n            </div>\n        </div>\n    );\n}\n\nexport default SignUpPage;",["96","97"],"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/forms/LoginForm.js",[],[],"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/forms/SignUpForm.js",[],[],"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/modals/MakeModal.js",["98","99","100"],[],"import {Modal, Button, Form, Badge} from 'react-bootstrap';\nimport './MakeModal.css';\nimport React, { useState } from 'react';\nimport { getValue } from '@testing-library/user-event/dist/utils';\nimport { toHaveFormValues, toHaveValue } from '@testing-library/jest-dom/dist/matchers';\n\nconst MakeModal=(props)=>{\n    var todayDate = new Date();\n    var tomorrowDate = new Date(todayDate.setDate(todayDate.getDate() + 1));\n    const [checkHidden, setcheckHidden] = useState(false);\n\n    const [Year, setYear] = useState(todayDate.getFullYear());\n    const [Month, setMonth] = useState(todayDate.getMonth()+1);\n    const [Day, setDay] = useState(todayDate.getDate());\n    const [Hour, setHour] = useState(todayDate.getHours());\n    const [Minute, setMinute] = useState((parseInt(todayDate.getMinutes()/10+1)*10).toString());\n    const [Destination, setDestination] = useState(\"\");\n    const [Auth, setAuth] = useState(\"NO\");\n    const [Gender, setGender] = useState(\"\");\n\n    const goToday=()=>{\n        setYear(todayDate.getFullYear());\n        setMonth(todayDate.getMonth()+1);\n        setDay(todayDate.getDate());\n    }\n\n    const goTomorrow=()=>{\n        setYear(tomorrowDate.getFullYear());\n        setMonth(tomorrowDate.getMonth()+1);\n        setDay(tomorrowDate.getDate());\n    };\n\n    const CheckANY=()=>{\n        setGender(\"ANY\")\n    };\n    const CheckMALE=()=>{\n        setGender(\"MALE\")\n    };\n    const CheckFEMALE=()=>{\n        setGender(\"FEMALE\")\n    };\n\n    const FormCheck=()=>{\n        return(\n            <div className='genderchoice'>\n                <p className='genderP'>\n                    성별 여부\n                </p>\n                <Form className='formchecks'>\n                    {['radio'].map((type) => (\n                        <div key={`inline-${type}`} className=\"mb-3\">\n                        <Form.Check\n                            inline\n                            onClick={CheckANY}\n                            label=\"상관없음\"\n                            name=\"group1\"\n                            type={type}\n                            id={`inline-${type}-1`}\n                        />\n                        <Form.Check\n                            inline\n                            onClick={CheckMALE}\n                            label=\"남자만\"\n                            name=\"group1\"\n                            type={type}\n                            id={`inline-${type}-2`}\n                        />\n                        <Form.Check\n                            inline\n                            onClick={CheckFEMALE}\n                            label=\"여자만\"\n                            name='group1'\n                            type={type}\n                            id={`inline-${type}-3`}\n                        />\n                        </div>\n                    ))}\n                </Form>\n            </div>\n        );\n    };\n\n    return(\n        <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        >\n            <Modal.Header style={{backgroundColor: \"#282828\"}}>\n                <Modal.Title className='MakeTitle' id=\"contained-modal-title-vcenter\">\n                Make Room Modal\n                </Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n                <div className='MakeDate'>\n                    <div className='subtitle'>\n                        날짜\n                    </div>\n                    <div className=\"vr\" />\n                    <div className='subcontent'>\n                        <Badge id='todaydate' bg=\"light\" text=\"dark\">{Year}년 {Month}월 {Day}일</Badge>\n                        <div className='buttonDate'>\n                            <Button variant=\"outline-dark\" className='buttonDateLeft' onClick={goToday}>오늘</Button>\n                            <Button variant=\"outline-dark\" className='buttonDateRight' onClick={goTomorrow}>내일</Button>\n                        </div>\n                    </div>\n                </div>\n                <div className='MakeTime'>\n                    <div className='subtitle'>\n                        시간\n                    </div>\n                    <div className=\"vr\" />\n                    <div className='subcontent'>\n                        <div className='choiceHour'>\n                            <Form.Control className='inputHour' placeholder={Hour} onChange={(event)=> setHour(event.target.value)}/>\n                            <Badge className='timeP' bg='light' text='dark'>시</Badge>\n                        </div>\n                        <div className='choiceMinute'>\n                            <Form.Control className='inputMinute' placeholder={Minute} onChange={(event)=> setMinute(event.target.value)}/>\n                            <Badge className='timeP' bg='light' text='dark'>분</Badge>\n                        </div>\n                    </div>\n                </div>\n                <div className='MakeDestination'>\n                    <div className='subtitle'>\n                        목적지\n                    </div>\n                    <div className=\"vr\" />\n                    <div className='subcontent'> \n                        <Form.Control className='inputDestination' placeholder=\"EX) 구미역 후문\" onChange={(event)=> setDestination(event.target.value)}/>\n                    </div>\n                </div>\n                <div className='MakeOther'>\n                    <div className='subtitle' style={{whiteSpace: \"pre-wrap\"}}>\n                        참가자{\"\\n\"}설정\n                    </div>\n                    <div className=\"vr\" />\n                    <div className='otherContent'>\n                        <div className='univSwitch'>\n                            <Form.Check \n                                type=\"switch\"\n                                id=\"custom-switch\"\n                                label=\"학교인증 여부\"\n                                onChange={()=>{\n                                    setcheckHidden(!checkHidden);\n                                    Auth === \"YES\" ? setAuth(\"NO\") : setAuth(\"YES\");\n                                }}\n                            />\n                        </div>\n                        {checkHidden && <FormCheck />}\n                    </div>               \n                </div>\n            </Modal.Body>\n\n            <Modal.Footer style={{backgroundColor: \"#FFFCEE\"}}>\n                <Button className='MakeButtonLeft' onClick={props.onHide}>Cancel</Button>\n                <Button className='MakeButtonRight' onClick={()=>{\n                    props.onHide();\n                    console.log(Year+\"\\n\"+Month+\"\\n\"+Day+\"\\n\"+Hour+\"\\n\"+Minute\n                    +\"\\n\"+Destination+\"\\n\"+Auth+\"\\n\"+Gender);\n                    }}>Make</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\nexport default MakeModal;","/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/modals/MyModal.js",[],[],["101","102"],"/Users/guhyeonwoo/Git/Projects/Taxi-Frontend/src/modals/CheckModal.js",[],[],["103","104"],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"105","replacedBy":"109"},{"ruleId":"107","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":16,"column":25,"nodeType":"113","endLine":17,"endColumn":66},{"ruleId":"105","replacedBy":"114"},{"ruleId":"107","replacedBy":"115"},{"ruleId":"111","severity":1,"message":"112","line":19,"column":21,"nodeType":"113","endLine":19,"endColumn":74},{"ruleId":"111","severity":1,"message":"112","line":19,"column":21,"nodeType":"113","endLine":19,"endColumn":75},{"ruleId":"105","replacedBy":"116"},{"ruleId":"107","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":4,"column":10,"nodeType":"120","messageId":"121","endLine":4,"endColumn":18},{"ruleId":"118","severity":1,"message":"122","line":5,"column":10,"nodeType":"120","messageId":"121","endLine":5,"endColumn":26},{"ruleId":"118","severity":1,"message":"123","line":5,"column":28,"nodeType":"120","messageId":"121","endLine":5,"endColumn":39},{"ruleId":"105","replacedBy":"124"},{"ruleId":"107","replacedBy":"125"},{"ruleId":"105","replacedBy":"126"},{"ruleId":"107","replacedBy":"127"},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],["128"],["129"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["128"],["129"],["128"],["129"],"no-unused-vars","'getValue' is defined but never used.","Identifier","unusedVar","'toHaveFormValues' is defined but never used.","'toHaveValue' is defined but never used.",["128"],["129"],["128"],["129"],"no-global-assign","no-unsafe-negation"]